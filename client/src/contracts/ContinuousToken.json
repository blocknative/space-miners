{
  "contractName": "ContinuousToken",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveRatio",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_supply",
          "type": "uint256"
        },
        {
          "name": "_reserveBalance",
          "type": "uint256"
        },
        {
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "name": "_depositAmount",
          "type": "uint256"
        }
      ],
      "name": "calculatePurchaseReturn",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_supply",
          "type": "uint256"
        },
        {
          "name": "_reserveBalance",
          "type": "uint256"
        },
        {
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "name": "_sellAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateSaleReturn",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "scale",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "reciever",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calculateContinuousMintReturn",
      "outputs": [
        {
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calculateContinuousBurnReturn",
      "outputs": [
        {
          "name": "burnAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calculateContinuousMintReturn\",\"outputs\":[{\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_supply\",\"type\":\"uint256\"},{\"name\":\"_reserveBalance\",\"type\":\"uint256\"},{\"name\":\"_reserveRatio\",\"type\":\"uint32\"},{\"name\":\"_depositAmount\",\"type\":\"uint256\"}],\"name\":\"calculatePurchaseReturn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"reciever\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_supply\",\"type\":\"uint256\"},{\"name\":\"_reserveBalance\",\"type\":\"uint256\"},{\"name\":\"_reserveRatio\",\"type\":\"uint32\"},{\"name\":\"_sellAmount\",\"type\":\"uint256\"}],\"name\":\"calculateSaleReturn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calculateContinuousBurnReturn\",\"outputs\":[{\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"scale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"calculatePurchaseReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a continuous token supply, reserve token balance, reserve ratio, and a deposit amount (in the reserve token),\\r calculates the return for a given conversion (in the continuous token)\\r    * Formula:\\r Return = _supply * ((1 + _depositAmount / _reserveBalance) ^ (_reserveRatio / MAX_RESERVE_RATIO) - 1)\\r \",\"params\":{\"_depositAmount\":\"deposit amount, in reserve token\\r \",\"_reserveBalance\":\"total reserve token balance\\r\",\"_reserveRatio\":\"reserve ratio, represented in ppm, 1-1000000\\r\",\"_supply\":\"continuous token total supply\\r\"},\"return\":\"purchase return amount\\r\"},\"calculateSaleReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a continuous token supply, reserve token balance, reserve ratio and a sell amount (in the continuous token),\\r calculates the return for a given conversion (in the reserve token)\\r    * Formula:\\r Return = _reserveBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_reserveRatio / MAX_RESERVE_RATIO)))\\r \",\"params\":{\"_reserveBalance\":\"total reserve token balance\\r\",\"_reserveRatio\":\"constant reserve ratio, represented in ppm, 1-1000000\\r\",\"_sellAmount\":\"sell amount, in the continuous token itself\\r \",\"_supply\":\"continuous token total supply\\r\"},\"return\":\"sale return amount\\r\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/D/dapps/space-miners/contracts/ContinuousToken.sol\":\"ContinuousToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/dapps/space-miners/contracts/BancorBondingCurve.sol\":{\"keccak256\":\"0xf86f54e7336fdf25a9cd6c0083eb824ee1418970a039becdf037e8f10c6cbd3a\",\"urls\":[\"bzzr://61fccc50cea10ef6f12dcf0ea7d16b1fca231f327a7e872c6e2fc2cdc2a8cc5e\"]},\"/D/dapps/space-miners/contracts/ContinuousToken.sol\":{\"keccak256\":\"0x0bd56ef92f6084d8ea819e49e3d38969c7ec872a288bdc5a2639147701bbbb45\",\"urls\":[\"bzzr://589f6f45456b68284ffe9fe243030acadb0fa7c1fb7e944b6e46656197ce8044\"]},\"/D/dapps/space-miners/contracts/Power.sol\":{\"keccak256\":\"0xbe56c6c2fb52ab5c269f0cc7191f772d433a014f622d210c4a665afb2591d4dd\",\"urls\":[\"bzzr://0592d2d76a65bce5c605c30f7acb27a0faf4b8bad9605288917a9dd59bbd4419\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3dceb7e4aa237a56111c13f77d7efadeceda7271d62bfac94ac79afab7c1f411\",\"urls\":[\"bzzr://2f34152a5bec385352002c31bc89f5e9935f628f1923ccea45c2281e0084a4db\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]}},\"version\":1}",
  "bytecode": "0x60806040526040805190810160405280600381526020017f302e3300000000000000000000000000000000000000000000000000000000008152506000908051906020019062000051929190620011e9565b50670de0b6b3a7640000608555608554600a026086556207a1206087553480156200007b57600080fd5b50701c35fedd14ffffffffffffffffffffffff600160206080811015156200009f57fe5b0181905550701b0ce43b323fffffffffffffffffffffff60016021608081101515620000c757fe5b01819055507019f0028ec1ffffffffffffffffffffffff60016022608081101515620000ef57fe5b01819055507018ded91f0e7fffffffffffffffffffffff600160236080811015156200011757fe5b01819055507017d8ec7f0417ffffffffffffffffffffff600160246080811015156200013f57fe5b01819055507016ddc6556cdbffffffffffffffffffffff600160256080811015156200016757fe5b01819055507015ecf52776a1ffffffffffffffffffffff600160266080811015156200018f57fe5b01819055507015060c256cb2ffffffffffffffffffffff60016027608081101515620001b757fe5b0181905550701428a2f98d72ffffffffffffffffffffff60016028608081101515620001df57fe5b01819055507013545598e5c23fffffffffffffffffffff600160296080811015156200020757fe5b0181905550701288c4161ce1dfffffffffffffffffffff6001602a6080811015156200022f57fe5b01819055507011c592761c666fffffffffffffffffffff6001602b6080811015156200025757fe5b018190555070110a688680a757ffffffffffffffffffff6001602c6080811015156200027f57fe5b0181905550701056f1b5bedf77ffffffffffffffffffff6001602d608081101515620002a757fe5b0181905550700faadceceeff8bffffffffffffffffffff6001602e608081101515620002cf57fe5b0181905550700f05dc6b27edadffffffffffffffffffff6001602f608081101515620002f757fe5b0181905550700e67a5a25da4107fffffffffffffffffff600160306080811015156200031f57fe5b0181905550700dcff115b14eedffffffffffffffffffff600160316080811015156200034757fe5b0181905550700d3e7a392431239fffffffffffffffffff600160326080811015156200036f57fe5b0181905550700cb2ff529eb71e4fffffffffffffffffff600160336080811015156200039757fe5b0181905550700c2d415c3db974afffffffffffffffffff60016034608081101515620003bf57fe5b0181905550700bad03e7d883f69bffffffffffffffffff60016035608081101515620003e757fe5b0181905550700b320d03b2c343d5ffffffffffffffffff600160366080811015156200040f57fe5b0181905550700abc25204e02828dffffffffffffffffff600160376080811015156200043757fe5b0181905550700a4b16f74ee4bb207fffffffffffffffff600160386080811015156200045f57fe5b01819055507009deaf736ac1f569ffffffffffffffffff600160396080811015156200048757fe5b0181905550700976bd9952c7aa957fffffffffffffffff6001603a608081101515620004af57fe5b01819055507009131271922eaa606fffffffffffffffff6001603b608081101515620004d757fe5b01819055507008b380f3558668c46fffffffffffffffff6001603c608081101515620004ff57fe5b0181905550700857ddf0117efa215bffffffffffffffff6001603d6080811015156200052757fe5b01819055507007ffffffffffffffffffffffffffffffff6001603e6080811015156200054f57fe5b01819055507007abbf6f6abb9d087fffffffffffffffff6001603f6080811015156200057757fe5b018190555070075af62cbac95f7dfa7fffffffffffffff600160406080811015156200059f57fe5b018190555070070d7fb7452e187ac13fffffffffffffff60016041608081101515620005c757fe5b01819055507006c3390ecc8af379295fffffffffffffff60016042608081101515620005ef57fe5b018190555070067c00a3b07ffc01fd6fffffffffffffff600160436080811015156200061757fe5b0181905550700637b647c39cbb9d3d27ffffffffffffff600160446080811015156200063f57fe5b01819055507005f63b1fc104dbd39587ffffffffffffff600160456080811015156200066757fe5b01819055507005b771955b36e12f7235ffffffffffffff600160466080811015156200068f57fe5b018190555070057b3d49dda84556d6f6ffffffffffffff60016047608081101515620006b757fe5b018190555070054183095b2c8ececf30ffffffffffffff60016048608081101515620006df57fe5b018190555070050a28be635ca2b888f77fffffffffffff600160496080811015156200070757fe5b01819055507004d5156639708c9db33c3fffffffffffff6001604a6080811015156200072f57fe5b01819055507004a23105873875bd52dfdfffffffffffff6001604b6080811015156200075757fe5b0181905550700471649d87199aa990756fffffffffffff6001604c6080811015156200077f57fe5b01819055507004429a21a029d4c1457cfbffffffffffff6001604d608081101515620007a757fe5b0181905550700415bc6d6fb7dd71af2cb3ffffffffffff6001604e608081101515620007cf57fe5b01819055507003eab73b3bbfe282243ce1ffffffffffff6001604f608081101515620007f757fe5b01819055507003c1771ac9fb6b4c18e229ffffffffffff600160506080811015156200081f57fe5b0181905550700399e96897690418f785257fffffffffff600160516080811015156200084757fe5b0181905550700373fc456c53bb779bf0ea9fffffffffff600160526080811015156200086f57fe5b018190555070034f9e8e490c48e67e6ab8bfffffffffff600160536080811015156200089757fe5b018190555070032cbfd4a7adc790560b3337ffffffffff60016054608081101515620008bf57fe5b018190555070030b50570f6e5d2acca94613ffffffffff60016055608081101515620008e757fe5b01819055507002eb40f9f620fda6b56c2861ffffffffff600160566080811015156200090f57fe5b01819055507002cc8340ecb0d0f520a6af58ffffffffff600160576080811015156200093757fe5b01819055507002af09481380a0a35cf1ba02ffffffffff600160586080811015156200095f57fe5b0181905550700292c5bdd3b92ec810287b1b3fffffffff600160596080811015156200098757fe5b0181905550700277abdcdab07d5a77ac6d6b9fffffffff6001605a608081101515620009af57fe5b018190555070025daf6654b1eaa55fd64df5efffffffff6001605b608081101515620009d757fe5b0181905550700244c49c648baa98192dce88b7ffffffff6001605c608081101515620009ff57fe5b018190555070022ce03cd5619a311b2471268bffffffff6001605d60808110151562000a2757fe5b0181905550700215f77c045fbe885654a44a0fffffffff6001605e60808110151562000a4f57fe5b01819055507001ffffffffffffffffffffffffffffffff6001605f60808110151562000a7757fe5b01819055507001eaefdbdaaee7421fc4d3ede5ffffffff6001606060808110151562000a9f57fe5b01819055507001d6bd8b2eb257df7e8ca57b09bfffffff6001606160808110151562000ac757fe5b01819055507001c35fedd14b861eb0443f7f133fffffff6001606260808110151562000aef57fe5b01819055507001b0ce43b322bcde4a56e8ada5afffffff6001606360808110151562000b1757fe5b018190555070019f0028ec1fff007f5a195a39dfffffff6001606460808110151562000b3f57fe5b018190555070018ded91f0e72ee74f49b15ba527ffffff6001606560808110151562000b6757fe5b018190555070017d8ec7f04136f4e5615fd41a63ffffff6001606660808110151562000b8f57fe5b018190555070016ddc6556cdb84bdc8d12d22e6fffffff6001606760808110151562000bb757fe5b018190555070015ecf52776a1155b5bd8395814f7fffff6001606860808110151562000bdf57fe5b018190555070015060c256cb23b3b3cc3754cf40ffffff6001606960808110151562000c0757fe5b01819055507001428a2f98d728ae223ddab715be3fffff6001606a60808110151562000c2f57fe5b018190555070013545598e5c23276ccf0ede68034fffff6001606b60808110151562000c5757fe5b01819055507001288c4161ce1d6f54b7f61081194fffff6001606c60808110151562000c7f57fe5b018190555070011c592761c666aa641d5a01a40f17ffff6001606d60808110151562000ca757fe5b0181905550700110a688680a7530515f3e6e6cfdcdffff6001606e60808110151562000ccf57fe5b01819055507001056f1b5bedf75c6bcb2ce8aed428ffff6001606f60808110151562000cf757fe5b01819055506ffaadceceeff8a0890f3875f008277fff6001607060808110151562000d1e57fe5b01819055506ff05dc6b27edad306388a600f6ba0bfff6001607160808110151562000d4557fe5b01819055506fe67a5a25da41063de1495d5b18cdbfff6001607260808110151562000d6c57fe5b01819055506fdcff115b14eedde6fc3aa5353f2e4fff6001607360808110151562000d9357fe5b01819055506fd3e7a3924312399f9aae2e0f868f8fff6001607460808110151562000dba57fe5b01819055506fcb2ff529eb71e41582cccd5a1ee26fff6001607560808110151562000de157fe5b01819055506fc2d415c3db974ab32a51840c0b67edff6001607660808110151562000e0857fe5b01819055506fbad03e7d883f69ad5b0a186184e06bff6001607760808110151562000e2f57fe5b01819055506fb320d03b2c343d4829abd6075f0cc5ff6001607860808110151562000e5657fe5b01819055506fabc25204e02828d73c6e80bcdb1a95bf6001607960808110151562000e7d57fe5b01819055506fa4b16f74ee4bb2040a1ec6c15fbbf2df6001607a60808110151562000ea457fe5b01819055506f9deaf736ac1f569deb1b5ae3f36c130f6001607b60808110151562000ecb57fe5b01819055506f976bd9952c7aa957f5937d790ef650376001607c60808110151562000ef257fe5b01819055506f9131271922eaa6064b73a22d0bd4f2bf6001607d60808110151562000f1957fe5b01819055506f8b380f3558668c46c91c49a2f8e967b96001607e60808110151562000f4057fe5b01819055506f857ddf0117efa215952912839f6473e66001607f60808110151562000f6757fe5b018190555033608160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550608160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36200104a3360855460010262001050640100000000026401000000009004565b62001298565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200108d57600080fd5b620010b281608454620011c76401000000000262001516179091906401000000009004565b6084819055506200111a81608260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620011c76401000000000262001516179091906401000000009004565b608260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000808284019050838110151515620011df57600080fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200122c57805160ff19168380011785556200125d565b828001600101855582156200125d579182015b828111156200125c5782518255916020019190600101906200123f565b5b5090506200126c919062001270565b5090565b6200129591905b808211156200129157600081600090555060010162001277565b5090565b90565b612fb480620012a86000396000f3fe608060405260043610610152576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100c8578063a10954fe1161008c578063a10954fe146106c5578063a457c2d7146106f0578063a9059cbb14610763578063dd62ed3e146107d6578063f2fde38b1461085b578063f51e181a146108ac57610152565b806370a0823114610574578063715018a6146105d95780638da5cb5b146105f05780638f32d59b1461064757806390f0c2ea1461067657610152565b806329a00e7c1161011a57806329a00e7c14610302578063395093511461037557806340c10f19146103e857806342966c681461043657806349f9b0f71461047157806354fd4d50146104e457610152565b8063095ea7b3146101575780630c7d5cd8146101ca57806318160ddd146101f557806323b872dd1461022057806328c3d701146102b3575b600080fd5b34801561016357600080fd5b506101b06004803603604081101561017a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108d7565b604051808215151515815260200191505060405180910390f35b3480156101d657600080fd5b506101df6108ee565b6040518082815260200191505060405180910390f35b34801561020157600080fd5b5061020a6108f4565b6040518082815260200191505060405180910390f35b34801561022c57600080fd5b506102996004803603606081101561024357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fe565b604051808215151515815260200191505060405180910390f35b3480156102bf57600080fd5b506102ec600480360360208110156102d657600080fd5b81019080803590602001909291905050506109af565b6040518082815260200191505060405180910390f35b34801561030e57600080fd5b5061035f6004803603608081101561032557600080fd5b810190808035906020019092919080359060200190929190803563ffffffff169060200190929190803590602001909291905050506109cf565b6040518082815260200191505060405180910390f35b34801561038157600080fd5b506103ce6004803603604081101561039857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ad5565b604051808215151515815260200191505060405180910390f35b610434600480360360408110156103fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b7a565b005b34801561044257600080fd5b5061046f6004803603602081101561045957600080fd5b8101908080359060200190929190505050610c01565b005b34801561047d57600080fd5b506104ce6004803603608081101561049457600080fd5b810190808035906020019092919080359060200190929190803563ffffffff16906020019092919080359060200190929190505050610c59565b6040518082815260200191505060405180910390f35b3480156104f057600080fd5b506104f9610d8e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561053957808201518184015260208101905061051e565b50505050905090810190601f1680156105665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561058057600080fd5b506105c36004803603602081101561059757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e2c565b6040518082815260200191505060405180910390f35b3480156105e557600080fd5b506105ee610e75565b005b3480156105fc57600080fd5b50610605610f49565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561065357600080fd5b5061065c610f73565b604051808215151515815260200191505060405180910390f35b34801561068257600080fd5b506106af6004803603602081101561069957600080fd5b8101908080359060200190929190505050610fcb565b6040518082815260200191505060405180910390f35b3480156106d157600080fd5b506106da610feb565b6040518082815260200191505060405180910390f35b3480156106fc57600080fd5b506107496004803603604081101561071357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ff1565b604051808215151515815260200191505060405180910390f35b34801561076f57600080fd5b506107bc6004803603604081101561078657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611096565b604051808215151515815260200191505060405180910390f35b3480156107e257600080fd5b50610845600480360360408110156107f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110ad565b6040518082815260200191505060405180910390f35b34801561086757600080fd5b506108aa6004803603602081101561087e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611134565b005b3480156108b857600080fd5b506108c1611153565b6040518082815260200191505060405180910390f35b60006108e4338484611159565b6001905092915050565b60875481565b6000608454905090565b600061090b8484846112bc565b6109a4843361099f85608360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461148c90919063ffffffff16565b611159565b600190509392505050565b60006109c86109bc6108f4565b608654608754856109cf565b9050919050565b600080851180156109e05750600084115b80156109f2575060008363ffffffff16115b8015610a0d5750620f424063ffffffff168363ffffffff1611155b1515610a1857600080fd5b6000821415610a2a5760009050610acd565b620f424063ffffffff168363ffffffff161415610a6d57610a6684610a5884886114ae90919063ffffffff16565b6114ec90919063ffffffff16565b9050610acd565b6000806000610a85878661151690919063ffffffff16565b9050610a96818888620f4240611537565b809350819450505060008260ff16610ab7858b6114ae90919063ffffffff16565b908060020a820491505090508881039450505050505b949350505050565b6000610b703384610b6b85608360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461151690919063ffffffff16565b611159565b6001905092915050565b600081111515610bf2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4d7573742073656e6420657468657220746f2062757920746f6b656e732e000081525060200191505060405180910390fd5b610bfc828261171b565b505050565b6000610c0c826117d0565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610c54573d6000803e3d6000fd5b505050565b60008085118015610c6a5750600084115b8015610c7c575060008363ffffffff16115b8015610c975750620f424063ffffffff168363ffffffff1611155b8015610ca35750848211155b1515610cae57600080fd5b6000821415610cc05760009050610d86565b84821415610cd057839050610d86565b620f424063ffffffff168363ffffffff161415610d1357610d0c85610cfe84876114ae90919063ffffffff16565b6114ec90919063ffffffff16565b9050610d86565b60008060008488039050610d2c8882620f424089611537565b80935081945050506000610d4984896114ae90919063ffffffff16565b905060008360ff16899060020a029050610d7e85610d70838561148c90919063ffffffff16565b6114ec90919063ffffffff16565b955050505050505b949350505050565b60008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e245780601f10610df957610100808354040283529160200191610e24565b820191906000526020600020905b815481529060010190602001808311610e0757829003601f168201915b505050505081565b6000608260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610e7d610f73565b1515610e8857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16608160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000608160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000608160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000608160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000610fe4610fd86108f4565b60865460875485610c59565b9050919050565b60865481565b600061108c338461108785608360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461148c90919063ffffffff16565b611159565b6001905092915050565b60006110a33384846112bc565b6001905092915050565b6000608360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61113c610f73565b151561114757600080fd5b61115081611904565b50565b60855481565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561119557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156111d157600080fd5b80608360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156112f857600080fd5b61134a81608260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461148c90919063ffffffff16565b608260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113df81608260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461151690919063ffffffff16565b608260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115151561149d57600080fd5b600082840390508091505092915050565b6000808314156114c157600090506114e6565b600082840290508284828115156114d457fe5b041415156114e157600080fd5b809150505b92915050565b600080821115156114fc57600080fd5b6000828481151561150957fe5b0490508091505092915050565b600080828401905083811015151561152d57600080fd5b8091505092915050565b600080700200000000000000000000000000000000861015156115c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f626173654e2065786365656473206d61782076616c75652e000000000000000081525060200191505060405180910390fd5b84861015151561163a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4261736573203c203120617265206e6f7420737570706f727465642e0000000081525060200191505060405180910390fd5b600080866f80000000000000000000000000000000890281151561165a57fe5b04905070015bf0a8b1457695355fb8ac404e7a79e38110156116865761167f81611a00565b9150611692565b61168f81611fd0565b91505b60008563ffffffff168763ffffffff1684028115156116ad57fe5b0490507008000000000000000000000000000000008110156116e0576116d281612115565b607f94509450505050611712565b60006116eb826126d5565b905061170881607f0360ff1683908060020a82049150508261279a565b8195509550505050505b94509492505050565b60008082111515611794576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4465706f736974206d757374206265206e6f6e2d7a65726f2e0000000000000081525060200191505060405180910390fd5b600061179f836109af565b90506117ab8482612c3d565b6117c08360865461151690919063ffffffff16565b6086819055508091505092915050565b60008082111515611849576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f416d6f756e74206d757374206265206e6f6e2d7a65726f2e000000000000000081525060200191505060405180910390fd5b8161185333610e2c565b101515156118c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f496e73756666696369656e7420746f6b656e7320746f206275726e2e0000000081525060200191505060405180910390fd5b60006118d483610fcb565b90506118eb8160865461148c90919063ffffffff16565b6086819055506118fb3384612d93565b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561194057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16608160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380608160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000905060008060006fd3094c70f034de4b96ff7d5b6f99fcd886101515611a6b576f40000000000000000000000000000000840193506fd3094c70f034de4b96ff7d5b6f99fcd86f800000000000000000000000000000008702811515611a6757fe5b0495505b6fa45af1e1f40c333b3de1db4dd55f29a786101515611aca576f20000000000000000000000000000000840193506fa45af1e1f40c333b3de1db4dd55f29a76f800000000000000000000000000000008702811515611ac657fe5b0495505b6f910b022db7ae67ce76b441c27035c6a186101515611b29576f10000000000000000000000000000000840193506f910b022db7ae67ce76b441c27035c6a16f800000000000000000000000000000008702811515611b2557fe5b0495505b6f88415abbe9a76bead8d00cf112e4d4a886101515611b88576f08000000000000000000000000000000840193506f88415abbe9a76bead8d00cf112e4d4a86f800000000000000000000000000000008702811515611b8457fe5b0495505b6f84102b00893f64c705e841d5d4064bd386101515611be7576f04000000000000000000000000000000840193506f84102b00893f64c705e841d5d4064bd36f800000000000000000000000000000008702811515611be357fe5b0495505b6f8204055aaef1c8bd5c3259f4822735a286101515611c46576f02000000000000000000000000000000840193506f8204055aaef1c8bd5c3259f4822735a26f800000000000000000000000000000008702811515611c4257fe5b0495505b6f810100ab00222d861931c15e39b44e9986101515611ca5576f01000000000000000000000000000000840193506f810100ab00222d861931c15e39b44e996f800000000000000000000000000000008702811515611ca157fe5b0495505b6f808040155aabbbe9451521693554f73386101515611d03576e800000000000000000000000000000840193506f808040155aabbbe9451521693554f7336f800000000000000000000000000000008702811515611cff57fe5b0495505b6f80000000000000000000000000000000860392508291506f80000000000000000000000000000000838402811515611d3857fe5b04905070010000000000000000000000000000000083700100000000000000000000000000000000038302811515611d6c57fe5b04840193506f80000000000000000000000000000000818302811515611d8e57fe5b049150700200000000000000000000000000000000836faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa038302811515611dc157fe5b04840193506f80000000000000000000000000000000818302811515611de357fe5b049150700300000000000000000000000000000000836f99999999999999999999999999999999038302811515611e1657fe5b04840193506f80000000000000000000000000000000818302811515611e3857fe5b049150700400000000000000000000000000000000836f92492492492492492492492492492492038302811515611e6b57fe5b04840193506f80000000000000000000000000000000818302811515611e8d57fe5b049150700500000000000000000000000000000000836f8e38e38e38e38e38e38e38e38e38e38e038302811515611ec057fe5b04840193506f80000000000000000000000000000000818302811515611ee257fe5b049150700600000000000000000000000000000000836f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b038302811515611f1557fe5b04840193506f80000000000000000000000000000000818302811515611f3757fe5b049150700700000000000000000000000000000000836f89d89d89d89d89d89d89d89d89d89d89038302811515611f6a57fe5b04840193506f80000000000000000000000000000000818302811515611f8c57fe5b049150700800000000000000000000000000000000836f88888888888888888888888888888888038302811515611fbf57fe5b048401935083945050505050919050565b6000806000905060008390507001000000000000000000000000000000008110151561204957600061201c6f800000000000000000000000000000008381151561201657fe5b04612ee9565b90508060ff1682908060020a820491505091506f800000000000000000000000000000008160ff16029250505b6f800000000000000000000000000000008111156120de576000607f90505b60008160ff1611156120dc576f8000000000000000000000000000000082830281151561209157fe5b049150700100000000000000000000000000000000821015156120d057600182908060020a820491505091506001810360ff1660019060020a02830192505b80600190039050612068565b505b6f05b9de1d10bf4103d647b0955897ba806f03f80fe03f80fe03f80fe03f80fe03f8830281151561210b57fe5b0492505050919050565b600080600090506000806f100000000000000000000000000000008581151561213a57fe5b0691508190506f8000000000000000000000000000000082820281151561215d57fe5b0490506710e1b3be415a00008102830192506f8000000000000000000000000000000082820281151561218c57fe5b0490506705a0913f6b1e00008102830192506f800000000000000000000000000000008282028115156121bb57fe5b049050670168244fdac780008102830192506f800000000000000000000000000000008282028115156121ea57fe5b049050664807432bc180008102830192506f8000000000000000000000000000000082820281151561221857fe5b049050660c0135dca040008102830192506f8000000000000000000000000000000082820281151561224657fe5b0490506601b707b1cdc0008102830192506f8000000000000000000000000000000082820281151561227457fe5b0490506536e0f639b8008102830192506f800000000000000000000000000000008282028115156122a157fe5b049050650618fee9f8008102830192506f800000000000000000000000000000008282028115156122ce57fe5b049050649c197dcc008102830192506f800000000000000000000000000000008282028115156122fa57fe5b049050640e30dce4008102830192506f8000000000000000000000000000000082820281151561232657fe5b04905064012ebd13008102830192506f8000000000000000000000000000000082820281151561235257fe5b0490506317499f008102830192506f8000000000000000000000000000000082820281151561237d57fe5b0490506301a9d4808102830192506f800000000000000000000000000000008282028115156123a857fe5b049050621c63808102830192506f800000000000000000000000000000008282028115156123d257fe5b0490506201c6388102830192506f800000000000000000000000000000008282028115156123fc57fe5b049050611ab88102830192506f8000000000000000000000000000000082820281151561242557fe5b04905061017c8102830192506f8000000000000000000000000000000082820281151561244e57fe5b04905060148102830192506f8000000000000000000000000000000082820281151561247657fe5b04905060018102830192506f80000000000000000000000000000000826721c3677c82b40000858115156124a657fe5b040101925060006f1000000000000000000000000000000086161415156124fa5770018ebef9eac820ae8682b9793ac6d1e7767001c3d6a24ed82218787d624d3e5eba95f984028115156124f657fe5b0492505b60006f200000000000000000000000000000008616141515612549577001368b2fc6f9609fe7aceb46aa619baed470018ebef9eac820ae8682b9793ac6d1e778840281151561254557fe5b0492505b60006f400000000000000000000000000000008616141515612597576fbc5ab1b16779be3575bd8f0520a9f21f7001368b2fc6f9609fe7aceb46aa619baed5840281151561259357fe5b0492505b60006f8000000000000000000000000000000086161415156125e4576f454aaa8efe072e7f6ddbab84b40a55c96fbc5ab1b16779be3575bd8f0520a9f21e84028115156125e057fe5b0492505b60007001000000000000000000000000000000008616141515612632576f0960aadc109e7a3bf4578099615711ea6f454aaa8efe072e7f6ddbab84b40a55c5840281151561262e57fe5b0492505b6000700200000000000000000000000000000000861614151561267f576e2bf84208204f5977f9a8cf01fdce3d6f0960aadc109e7a3bf4578099615711d7840281151561267b57fe5b0492505b600070040000000000000000000000000000000086161415156126ca576d03c6ab775dd0b95b4cbee7e65d116e2bf84208204f5977f9a8cf01fdc30784028115156126c657fe5b0492505b829350505050919050565b600080602090506000607f90505b8060ff166001830160ff161015612738576000600282840160ff1681151561270757fe5b0490508460018260ff1660808110151561271d57fe5b015410151561272e57809250612732565b8091505b506126e3565b8360018260ff1660808110151561274b57fe5b015410151561275e578092505050612795565b8360018360ff1660808110151561277157fe5b0154101515612784578192505050612795565b6000151561278e57fe5b6000925050505b919050565b60008083905060008090508360ff16858302908060020a820491505091506f03442c4e6074a82f1797f72ac00000008202810190508360ff16858302908060020a820491505091506f0116b96f757c380fb287fd0e400000008202810190508360ff16858302908060020a820491505091506e45ae5bdd5f0e03eca1ff43900000008202810190508360ff16858302908060020a820491505091506e0defabf91302cd95b9ffda500000008202810190508360ff16858302908060020a820491505091506e02529ca9832b22439efff9b80000008202810190508360ff16858302908060020a820491505091506d54f1cf12bd04e516b6da880000008202810190508360ff16858302908060020a820491505091506d0a9e39e257a09ca2d6db510000008202810190508360ff16858302908060020a820491505091506d012e066e7b839fa050c3090000008202810190508360ff16858302908060020a820491505091506c1e33d7d926c329a1ad1a8000008202810190508360ff16858302908060020a820491505091506c02bee513bdb4a6b19b5f8000008202810190508360ff16858302908060020a820491505091506b3a9316fa79b88eccf2a000008202810190508360ff16858302908060020a820491505091506b048177ebe1fa8123752000008202810190508360ff16858302908060020a820491505091506a5263fe90242dcbacf000008202810190508360ff16858302908060020a820491505091506a057e22099c030d941000008202810190508360ff16858302908060020a820491505091506957e22099c030d94100008202810190508360ff16858302908060020a8204915050915069052b6b545699763100008202810190508360ff16858302908060020a82049150509150684985f67696bf7480008202810190508360ff16858302908060020a820491505091506803dea12ea99e4980008202810190508360ff16858302908060020a820491505091506731880f2214b6e0008202810190508360ff16858302908060020a8204915050915067025bcff56eb360008202810190508360ff16858302908060020a82049150509150661b722e10ab10008202810190508360ff16858302908060020a820491505091506601317c700770008202810190508360ff16858302908060020a82049150509150650cba84aafa008202810190508360ff16858302908060020a820491505091506482573a0a008202810190508360ff16858302908060020a820491505091506405035ad9008202810190508360ff16858302908060020a82049150509150632f881b008202810190508360ff16858302908060020a820491505091506301b293408202810190508360ff16858302908060020a82049150509150620efc408202810190508360ff16858302908060020a82049150509150617fe08202810190508360ff16858302908060020a820491505091506104208202810190508360ff16858302908060020a8204915050915060218202810190508360ff16858302908060020a8204915050915060018202810190508360ff1660019060020a02856f0688589cc0e9505e2f2fee558000000083811515612c3057fe5b0401019250505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612c7957600080fd5b612c8e8160845461151690919063ffffffff16565b608481905550612ce681608260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461151690919063ffffffff16565b608260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612dcf57600080fd5b612de48160845461148c90919063ffffffff16565b608481905550612e3c81608260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461148c90919063ffffffff16565b608260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080600090506000839050610100811015612f28575b6001811115612f2357600181908060020a82049150509050600182019150612f00565b612f7e565b6000608090505b60008160ff161115612f7c578060ff1660019060020a0282101515612f65578060ff1682908060020a8204915050915080831792505b60018160ff16908060020a82049150509050612f2f565b505b819250505091905056fea165627a7a723058201e1de722ca7ea008812fd73d8998c76b9d84d2961ede2064d92e9e7d4b0e2a8c0029",
  "deployedBytecode": "0x608060405260043610610152576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100c8578063a10954fe1161008c578063a10954fe146106c5578063a457c2d7146106f0578063a9059cbb14610763578063dd62ed3e146107d6578063f2fde38b1461085b578063f51e181a146108ac57610152565b806370a0823114610574578063715018a6146105d95780638da5cb5b146105f05780638f32d59b1461064757806390f0c2ea1461067657610152565b806329a00e7c1161011a57806329a00e7c14610302578063395093511461037557806340c10f19146103e857806342966c681461043657806349f9b0f71461047157806354fd4d50146104e457610152565b8063095ea7b3146101575780630c7d5cd8146101ca57806318160ddd146101f557806323b872dd1461022057806328c3d701146102b3575b600080fd5b34801561016357600080fd5b506101b06004803603604081101561017a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108d7565b604051808215151515815260200191505060405180910390f35b3480156101d657600080fd5b506101df6108ee565b6040518082815260200191505060405180910390f35b34801561020157600080fd5b5061020a6108f4565b6040518082815260200191505060405180910390f35b34801561022c57600080fd5b506102996004803603606081101561024357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fe565b604051808215151515815260200191505060405180910390f35b3480156102bf57600080fd5b506102ec600480360360208110156102d657600080fd5b81019080803590602001909291905050506109af565b6040518082815260200191505060405180910390f35b34801561030e57600080fd5b5061035f6004803603608081101561032557600080fd5b810190808035906020019092919080359060200190929190803563ffffffff169060200190929190803590602001909291905050506109cf565b6040518082815260200191505060405180910390f35b34801561038157600080fd5b506103ce6004803603604081101561039857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ad5565b604051808215151515815260200191505060405180910390f35b610434600480360360408110156103fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b7a565b005b34801561044257600080fd5b5061046f6004803603602081101561045957600080fd5b8101908080359060200190929190505050610c01565b005b34801561047d57600080fd5b506104ce6004803603608081101561049457600080fd5b810190808035906020019092919080359060200190929190803563ffffffff16906020019092919080359060200190929190505050610c59565b6040518082815260200191505060405180910390f35b3480156104f057600080fd5b506104f9610d8e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561053957808201518184015260208101905061051e565b50505050905090810190601f1680156105665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561058057600080fd5b506105c36004803603602081101561059757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e2c565b6040518082815260200191505060405180910390f35b3480156105e557600080fd5b506105ee610e75565b005b3480156105fc57600080fd5b50610605610f49565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561065357600080fd5b5061065c610f73565b604051808215151515815260200191505060405180910390f35b34801561068257600080fd5b506106af6004803603602081101561069957600080fd5b8101908080359060200190929190505050610fcb565b6040518082815260200191505060405180910390f35b3480156106d157600080fd5b506106da610feb565b6040518082815260200191505060405180910390f35b3480156106fc57600080fd5b506107496004803603604081101561071357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ff1565b604051808215151515815260200191505060405180910390f35b34801561076f57600080fd5b506107bc6004803603604081101561078657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611096565b604051808215151515815260200191505060405180910390f35b3480156107e257600080fd5b50610845600480360360408110156107f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110ad565b6040518082815260200191505060405180910390f35b34801561086757600080fd5b506108aa6004803603602081101561087e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611134565b005b3480156108b857600080fd5b506108c1611153565b6040518082815260200191505060405180910390f35b60006108e4338484611159565b6001905092915050565b60875481565b6000608454905090565b600061090b8484846112bc565b6109a4843361099f85608360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461148c90919063ffffffff16565b611159565b600190509392505050565b60006109c86109bc6108f4565b608654608754856109cf565b9050919050565b600080851180156109e05750600084115b80156109f2575060008363ffffffff16115b8015610a0d5750620f424063ffffffff168363ffffffff1611155b1515610a1857600080fd5b6000821415610a2a5760009050610acd565b620f424063ffffffff168363ffffffff161415610a6d57610a6684610a5884886114ae90919063ffffffff16565b6114ec90919063ffffffff16565b9050610acd565b6000806000610a85878661151690919063ffffffff16565b9050610a96818888620f4240611537565b809350819450505060008260ff16610ab7858b6114ae90919063ffffffff16565b908060020a820491505090508881039450505050505b949350505050565b6000610b703384610b6b85608360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461151690919063ffffffff16565b611159565b6001905092915050565b600081111515610bf2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4d7573742073656e6420657468657220746f2062757920746f6b656e732e000081525060200191505060405180910390fd5b610bfc828261171b565b505050565b6000610c0c826117d0565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610c54573d6000803e3d6000fd5b505050565b60008085118015610c6a5750600084115b8015610c7c575060008363ffffffff16115b8015610c975750620f424063ffffffff168363ffffffff1611155b8015610ca35750848211155b1515610cae57600080fd5b6000821415610cc05760009050610d86565b84821415610cd057839050610d86565b620f424063ffffffff168363ffffffff161415610d1357610d0c85610cfe84876114ae90919063ffffffff16565b6114ec90919063ffffffff16565b9050610d86565b60008060008488039050610d2c8882620f424089611537565b80935081945050506000610d4984896114ae90919063ffffffff16565b905060008360ff16899060020a029050610d7e85610d70838561148c90919063ffffffff16565b6114ec90919063ffffffff16565b955050505050505b949350505050565b60008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e245780601f10610df957610100808354040283529160200191610e24565b820191906000526020600020905b815481529060010190602001808311610e0757829003601f168201915b505050505081565b6000608260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610e7d610f73565b1515610e8857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16608160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000608160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000608160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000608160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000610fe4610fd86108f4565b60865460875485610c59565b9050919050565b60865481565b600061108c338461108785608360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461148c90919063ffffffff16565b611159565b6001905092915050565b60006110a33384846112bc565b6001905092915050565b6000608360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61113c610f73565b151561114757600080fd5b61115081611904565b50565b60855481565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561119557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156111d157600080fd5b80608360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156112f857600080fd5b61134a81608260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461148c90919063ffffffff16565b608260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113df81608260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461151690919063ffffffff16565b608260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115151561149d57600080fd5b600082840390508091505092915050565b6000808314156114c157600090506114e6565b600082840290508284828115156114d457fe5b041415156114e157600080fd5b809150505b92915050565b600080821115156114fc57600080fd5b6000828481151561150957fe5b0490508091505092915050565b600080828401905083811015151561152d57600080fd5b8091505092915050565b600080700200000000000000000000000000000000861015156115c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f626173654e2065786365656473206d61782076616c75652e000000000000000081525060200191505060405180910390fd5b84861015151561163a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4261736573203c203120617265206e6f7420737570706f727465642e0000000081525060200191505060405180910390fd5b600080866f80000000000000000000000000000000890281151561165a57fe5b04905070015bf0a8b1457695355fb8ac404e7a79e38110156116865761167f81611a00565b9150611692565b61168f81611fd0565b91505b60008563ffffffff168763ffffffff1684028115156116ad57fe5b0490507008000000000000000000000000000000008110156116e0576116d281612115565b607f94509450505050611712565b60006116eb826126d5565b905061170881607f0360ff1683908060020a82049150508261279a565b8195509550505050505b94509492505050565b60008082111515611794576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4465706f736974206d757374206265206e6f6e2d7a65726f2e0000000000000081525060200191505060405180910390fd5b600061179f836109af565b90506117ab8482612c3d565b6117c08360865461151690919063ffffffff16565b6086819055508091505092915050565b60008082111515611849576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f416d6f756e74206d757374206265206e6f6e2d7a65726f2e000000000000000081525060200191505060405180910390fd5b8161185333610e2c565b101515156118c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f496e73756666696369656e7420746f6b656e7320746f206275726e2e0000000081525060200191505060405180910390fd5b60006118d483610fcb565b90506118eb8160865461148c90919063ffffffff16565b6086819055506118fb3384612d93565b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561194057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16608160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380608160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000905060008060006fd3094c70f034de4b96ff7d5b6f99fcd886101515611a6b576f40000000000000000000000000000000840193506fd3094c70f034de4b96ff7d5b6f99fcd86f800000000000000000000000000000008702811515611a6757fe5b0495505b6fa45af1e1f40c333b3de1db4dd55f29a786101515611aca576f20000000000000000000000000000000840193506fa45af1e1f40c333b3de1db4dd55f29a76f800000000000000000000000000000008702811515611ac657fe5b0495505b6f910b022db7ae67ce76b441c27035c6a186101515611b29576f10000000000000000000000000000000840193506f910b022db7ae67ce76b441c27035c6a16f800000000000000000000000000000008702811515611b2557fe5b0495505b6f88415abbe9a76bead8d00cf112e4d4a886101515611b88576f08000000000000000000000000000000840193506f88415abbe9a76bead8d00cf112e4d4a86f800000000000000000000000000000008702811515611b8457fe5b0495505b6f84102b00893f64c705e841d5d4064bd386101515611be7576f04000000000000000000000000000000840193506f84102b00893f64c705e841d5d4064bd36f800000000000000000000000000000008702811515611be357fe5b0495505b6f8204055aaef1c8bd5c3259f4822735a286101515611c46576f02000000000000000000000000000000840193506f8204055aaef1c8bd5c3259f4822735a26f800000000000000000000000000000008702811515611c4257fe5b0495505b6f810100ab00222d861931c15e39b44e9986101515611ca5576f01000000000000000000000000000000840193506f810100ab00222d861931c15e39b44e996f800000000000000000000000000000008702811515611ca157fe5b0495505b6f808040155aabbbe9451521693554f73386101515611d03576e800000000000000000000000000000840193506f808040155aabbbe9451521693554f7336f800000000000000000000000000000008702811515611cff57fe5b0495505b6f80000000000000000000000000000000860392508291506f80000000000000000000000000000000838402811515611d3857fe5b04905070010000000000000000000000000000000083700100000000000000000000000000000000038302811515611d6c57fe5b04840193506f80000000000000000000000000000000818302811515611d8e57fe5b049150700200000000000000000000000000000000836faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa038302811515611dc157fe5b04840193506f80000000000000000000000000000000818302811515611de357fe5b049150700300000000000000000000000000000000836f99999999999999999999999999999999038302811515611e1657fe5b04840193506f80000000000000000000000000000000818302811515611e3857fe5b049150700400000000000000000000000000000000836f92492492492492492492492492492492038302811515611e6b57fe5b04840193506f80000000000000000000000000000000818302811515611e8d57fe5b049150700500000000000000000000000000000000836f8e38e38e38e38e38e38e38e38e38e38e038302811515611ec057fe5b04840193506f80000000000000000000000000000000818302811515611ee257fe5b049150700600000000000000000000000000000000836f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b038302811515611f1557fe5b04840193506f80000000000000000000000000000000818302811515611f3757fe5b049150700700000000000000000000000000000000836f89d89d89d89d89d89d89d89d89d89d89038302811515611f6a57fe5b04840193506f80000000000000000000000000000000818302811515611f8c57fe5b049150700800000000000000000000000000000000836f88888888888888888888888888888888038302811515611fbf57fe5b048401935083945050505050919050565b6000806000905060008390507001000000000000000000000000000000008110151561204957600061201c6f800000000000000000000000000000008381151561201657fe5b04612ee9565b90508060ff1682908060020a820491505091506f800000000000000000000000000000008160ff16029250505b6f800000000000000000000000000000008111156120de576000607f90505b60008160ff1611156120dc576f8000000000000000000000000000000082830281151561209157fe5b049150700100000000000000000000000000000000821015156120d057600182908060020a820491505091506001810360ff1660019060020a02830192505b80600190039050612068565b505b6f05b9de1d10bf4103d647b0955897ba806f03f80fe03f80fe03f80fe03f80fe03f8830281151561210b57fe5b0492505050919050565b600080600090506000806f100000000000000000000000000000008581151561213a57fe5b0691508190506f8000000000000000000000000000000082820281151561215d57fe5b0490506710e1b3be415a00008102830192506f8000000000000000000000000000000082820281151561218c57fe5b0490506705a0913f6b1e00008102830192506f800000000000000000000000000000008282028115156121bb57fe5b049050670168244fdac780008102830192506f800000000000000000000000000000008282028115156121ea57fe5b049050664807432bc180008102830192506f8000000000000000000000000000000082820281151561221857fe5b049050660c0135dca040008102830192506f8000000000000000000000000000000082820281151561224657fe5b0490506601b707b1cdc0008102830192506f8000000000000000000000000000000082820281151561227457fe5b0490506536e0f639b8008102830192506f800000000000000000000000000000008282028115156122a157fe5b049050650618fee9f8008102830192506f800000000000000000000000000000008282028115156122ce57fe5b049050649c197dcc008102830192506f800000000000000000000000000000008282028115156122fa57fe5b049050640e30dce4008102830192506f8000000000000000000000000000000082820281151561232657fe5b04905064012ebd13008102830192506f8000000000000000000000000000000082820281151561235257fe5b0490506317499f008102830192506f8000000000000000000000000000000082820281151561237d57fe5b0490506301a9d4808102830192506f800000000000000000000000000000008282028115156123a857fe5b049050621c63808102830192506f800000000000000000000000000000008282028115156123d257fe5b0490506201c6388102830192506f800000000000000000000000000000008282028115156123fc57fe5b049050611ab88102830192506f8000000000000000000000000000000082820281151561242557fe5b04905061017c8102830192506f8000000000000000000000000000000082820281151561244e57fe5b04905060148102830192506f8000000000000000000000000000000082820281151561247657fe5b04905060018102830192506f80000000000000000000000000000000826721c3677c82b40000858115156124a657fe5b040101925060006f1000000000000000000000000000000086161415156124fa5770018ebef9eac820ae8682b9793ac6d1e7767001c3d6a24ed82218787d624d3e5eba95f984028115156124f657fe5b0492505b60006f200000000000000000000000000000008616141515612549577001368b2fc6f9609fe7aceb46aa619baed470018ebef9eac820ae8682b9793ac6d1e778840281151561254557fe5b0492505b60006f400000000000000000000000000000008616141515612597576fbc5ab1b16779be3575bd8f0520a9f21f7001368b2fc6f9609fe7aceb46aa619baed5840281151561259357fe5b0492505b60006f8000000000000000000000000000000086161415156125e4576f454aaa8efe072e7f6ddbab84b40a55c96fbc5ab1b16779be3575bd8f0520a9f21e84028115156125e057fe5b0492505b60007001000000000000000000000000000000008616141515612632576f0960aadc109e7a3bf4578099615711ea6f454aaa8efe072e7f6ddbab84b40a55c5840281151561262e57fe5b0492505b6000700200000000000000000000000000000000861614151561267f576e2bf84208204f5977f9a8cf01fdce3d6f0960aadc109e7a3bf4578099615711d7840281151561267b57fe5b0492505b600070040000000000000000000000000000000086161415156126ca576d03c6ab775dd0b95b4cbee7e65d116e2bf84208204f5977f9a8cf01fdc30784028115156126c657fe5b0492505b829350505050919050565b600080602090506000607f90505b8060ff166001830160ff161015612738576000600282840160ff1681151561270757fe5b0490508460018260ff1660808110151561271d57fe5b015410151561272e57809250612732565b8091505b506126e3565b8360018260ff1660808110151561274b57fe5b015410151561275e578092505050612795565b8360018360ff1660808110151561277157fe5b0154101515612784578192505050612795565b6000151561278e57fe5b6000925050505b919050565b60008083905060008090508360ff16858302908060020a820491505091506f03442c4e6074a82f1797f72ac00000008202810190508360ff16858302908060020a820491505091506f0116b96f757c380fb287fd0e400000008202810190508360ff16858302908060020a820491505091506e45ae5bdd5f0e03eca1ff43900000008202810190508360ff16858302908060020a820491505091506e0defabf91302cd95b9ffda500000008202810190508360ff16858302908060020a820491505091506e02529ca9832b22439efff9b80000008202810190508360ff16858302908060020a820491505091506d54f1cf12bd04e516b6da880000008202810190508360ff16858302908060020a820491505091506d0a9e39e257a09ca2d6db510000008202810190508360ff16858302908060020a820491505091506d012e066e7b839fa050c3090000008202810190508360ff16858302908060020a820491505091506c1e33d7d926c329a1ad1a8000008202810190508360ff16858302908060020a820491505091506c02bee513bdb4a6b19b5f8000008202810190508360ff16858302908060020a820491505091506b3a9316fa79b88eccf2a000008202810190508360ff16858302908060020a820491505091506b048177ebe1fa8123752000008202810190508360ff16858302908060020a820491505091506a5263fe90242dcbacf000008202810190508360ff16858302908060020a820491505091506a057e22099c030d941000008202810190508360ff16858302908060020a820491505091506957e22099c030d94100008202810190508360ff16858302908060020a8204915050915069052b6b545699763100008202810190508360ff16858302908060020a82049150509150684985f67696bf7480008202810190508360ff16858302908060020a820491505091506803dea12ea99e4980008202810190508360ff16858302908060020a820491505091506731880f2214b6e0008202810190508360ff16858302908060020a8204915050915067025bcff56eb360008202810190508360ff16858302908060020a82049150509150661b722e10ab10008202810190508360ff16858302908060020a820491505091506601317c700770008202810190508360ff16858302908060020a82049150509150650cba84aafa008202810190508360ff16858302908060020a820491505091506482573a0a008202810190508360ff16858302908060020a820491505091506405035ad9008202810190508360ff16858302908060020a82049150509150632f881b008202810190508360ff16858302908060020a820491505091506301b293408202810190508360ff16858302908060020a82049150509150620efc408202810190508360ff16858302908060020a82049150509150617fe08202810190508360ff16858302908060020a820491505091506104208202810190508360ff16858302908060020a8204915050915060218202810190508360ff16858302908060020a8204915050915060018202810190508360ff1660019060020a02856f0688589cc0e9505e2f2fee558000000083811515612c3057fe5b0401019250505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612c7957600080fd5b612c8e8160845461151690919063ffffffff16565b608481905550612ce681608260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461151690919063ffffffff16565b608260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612dcf57600080fd5b612de48160845461148c90919063ffffffff16565b608481905550612e3c81608260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461148c90919063ffffffff16565b608260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080600090506000839050610100811015612f28575b6001811115612f2357600181908060020a82049150509050600182019150612f00565b612f7e565b6000608090505b60008160ff161115612f7c578060ff1660019060020a0282101515612f65578060ff1682908060020a8204915050915080831792505b60018160ff16908060020a82049150509050612f2f565b505b819250505091905056fea165627a7a723058201e1de722ca7ea008812fd73d8998c76b9d84d2961ede2064d92e9e7d4b0e2a8c0029",
  "sourceMap": "258:1900:1:-;;;576:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;392:6:1;369:29;;440:5;;437:2;:8;405:40;;482:6;452:36;;497:66;8:9:-1;5:2;;;30:1;27;20:12;5:2;497:66:1;3965:36:3;3947:11;3959:2;3947:15;;;;;;;;;;:54;;;;4026:36;4008:11;4020:2;4008:15;;;;;;;;;;:54;;;;4087:36;4069:11;4081:2;4069:15;;;;;;;;;;:54;;;;4148:36;4130:11;4142:2;4130:15;;;;;;;;;;:54;;;;4209:36;4191:11;4203:2;4191:15;;;;;;;;;;:54;;;;4270:36;4252:11;4264:2;4252:15;;;;;;;;;;:54;;;;4331:36;4313:11;4325:2;4313:15;;;;;;;;;;:54;;;;4392:36;4374:11;4386:2;4374:15;;;;;;;;;;:54;;;;4453:36;4435:11;4447:2;4435:15;;;;;;;;;;:54;;;;4514:36;4496:11;4508:2;4496:15;;;;;;;;;;:54;;;;4575:36;4557:11;4569:2;4557:15;;;;;;;;;;:54;;;;4636:36;4618:11;4630:2;4618:15;;;;;;;;;;:54;;;;4697:36;4679:11;4691:2;4679:15;;;;;;;;;;:54;;;;4758:36;4740:11;4752:2;4740:15;;;;;;;;;;:54;;;;4819:36;4801:11;4813:2;4801:15;;;;;;;;;;:54;;;;4880:36;4862:11;4874:2;4862:15;;;;;;;;;;:54;;;;4941:36;4923:11;4935:2;4923:15;;;;;;;;;;:54;;;;5002:36;4984:11;4996:2;4984:15;;;;;;;;;;:54;;;;5063:36;5045:11;5057:2;5045:15;;;;;;;;;;:54;;;;5124:36;5106:11;5118:2;5106:15;;;;;;;;;;:54;;;;5185:36;5167:11;5179:2;5167:15;;;;;;;;;;:54;;;;5246:36;5228:11;5240:2;5228:15;;;;;;;;;;:54;;;;5307:36;5289:11;5301:2;5289:15;;;;;;;;;;:54;;;;5368:36;5350:11;5362:2;5350:15;;;;;;;;;;:54;;;;5429:36;5411:11;5423:2;5411:15;;;;;;;;;;:54;;;;5490:36;5472:11;5484:2;5472:15;;;;;;;;;;:54;;;;5551:36;5533:11;5545:2;5533:15;;;;;;;;;;:54;;;;5612:36;5594:11;5606:2;5594:15;;;;;;;;;;:54;;;;5673:36;5655:11;5667:2;5655:15;;;;;;;;;;:54;;;;5734:36;5716:11;5728:2;5716:15;;;;;;;;;;:54;;;;5795:36;5777:11;5789:2;5777:15;;;;;;;;;;:54;;;;5856:36;5838:11;5850:2;5838:15;;;;;;;;;;:54;;;;5917:36;5899:11;5911:2;5899:15;;;;;;;;;;:54;;;;5978:36;5960:11;5972:2;5960:15;;;;;;;;;;:54;;;;6039:36;6021:11;6033:2;6021:15;;;;;;;;;;:54;;;;6100:36;6082:11;6094:2;6082:15;;;;;;;;;;:54;;;;6161:36;6143:11;6155:2;6143:15;;;;;;;;;;:54;;;;6222:36;6204:11;6216:2;6204:15;;;;;;;;;;:54;;;;6283:36;6265:11;6277:2;6265:15;;;;;;;;;;:54;;;;6344:36;6326:11;6338:2;6326:15;;;;;;;;;;:54;;;;6405:36;6387:11;6399:2;6387:15;;;;;;;;;;:54;;;;6466:36;6448:11;6460:2;6448:15;;;;;;;;;;:54;;;;6527:36;6509:11;6521:2;6509:15;;;;;;;;;;:54;;;;6588:36;6570:11;6582:2;6570:15;;;;;;;;;;:54;;;;6649:36;6631:11;6643:2;6631:15;;;;;;;;;;:54;;;;6710:36;6692:11;6704:2;6692:15;;;;;;;;;;:54;;;;6771:36;6753:11;6765:2;6753:15;;;;;;;;;;:54;;;;6832:36;6814:11;6826:2;6814:15;;;;;;;;;;:54;;;;6893:36;6875:11;6887:2;6875:15;;;;;;;;;;:54;;;;6954:36;6936:11;6948:2;6936:15;;;;;;;;;;:54;;;;7015:36;6997:11;7009:2;6997:15;;;;;;;;;;:54;;;;7076:36;7058:11;7070:2;7058:15;;;;;;;;;;:54;;;;7137:36;7119:11;7131:2;7119:15;;;;;;;;;;:54;;;;7198:36;7180:11;7192:2;7180:15;;;;;;;;;;:54;;;;7259:36;7241:11;7253:2;7241:15;;;;;;;;;;:54;;;;7320:36;7302:11;7314:2;7302:15;;;;;;;;;;:54;;;;7381:36;7363:11;7375:2;7363:15;;;;;;;;;;:54;;;;7442:36;7424:11;7436:2;7424:15;;;;;;;;;;:54;;;;7503:36;7485:11;7497:2;7485:15;;;;;;;;;;:54;;;;7564:36;7546:11;7558:2;7546:15;;;;;;;;;;:54;;;;7625:36;7607:11;7619:2;7607:15;;;;;;;;;;:54;;;;7686:36;7668:11;7680:2;7668:15;;;;;;;;;;:54;;;;7747:36;7729:11;7741:2;7729:15;;;;;;;;;;:54;;;;7808:36;7790:11;7802:2;7790:15;;;;;;;;;;:54;;;;7869:36;7851:11;7863:2;7851:15;;;;;;;;;;:54;;;;7930:36;7912:11;7924:2;7912:15;;;;;;;;;;:54;;;;7991:36;7973:11;7985:2;7973:15;;;;;;;;;;:54;;;;8052:36;8034:11;8046:2;8034:15;;;;;;;;;;:54;;;;8114:36;8095:11;8107:3;8095:16;;;;;;;;;;:55;;;;8176:36;8157:11;8169:3;8157:16;;;;;;;;;;:55;;;;8238:36;8219:11;8231:3;8219:16;;;;;;;;;;:55;;;;8300:36;8281:11;8293:3;8281:16;;;;;;;;;;:55;;;;8362:36;8343:11;8355:3;8343:16;;;;;;;;;;:55;;;;8424:36;8405:11;8417:3;8405:16;;;;;;;;;;:55;;;;8486:36;8467:11;8479:3;8467:16;;;;;;;;;;:55;;;;8548:36;8529:11;8541:3;8529:16;;;;;;;;;;:55;;;;8610:36;8591:11;8603:3;8591:16;;;;;;;;;;:55;;;;8672:36;8653:11;8665:3;8653:16;;;;;;;;;;:55;;;;8734:36;8715:11;8727:3;8715:16;;;;;;;;;;:55;;;;8796:36;8777:11;8789:3;8777:16;;;;;;;;;;:55;;;;8858:36;8839:11;8851:3;8839:16;;;;;;;;;;:55;;;;8920:36;8901:11;8913:3;8901:16;;;;;;;;;;:55;;;;8982:36;8963:11;8975:3;8963:16;;;;;;;;;;:55;;;;9044:36;9025:11;9037:3;9025:16;;;;;;;;;;:55;;;;9106:36;9087:11;9099:3;9087:16;;;;;;;;;;:55;;;;9168:36;9149:11;9161:3;9149:16;;;;;;;;;;:55;;;;9230:36;9211:11;9223:3;9211:16;;;;;;;;;;:55;;;;9292:36;9273:11;9285:3;9273:16;;;;;;;;;;:55;;;;9354:36;9335:11;9347:3;9335:16;;;;;;;;;;:55;;;;9416:36;9397:11;9409:3;9397:16;;;;;;;;;;:55;;;;9478:36;9459:11;9471:3;9459:16;;;;;;;;;;:55;;;;9540:36;9521:11;9533:3;9521:16;;;;;;;;;;:55;;;;9602:36;9583:11;9595:3;9583:16;;;;;;;;;;:55;;;;9664:36;9645:11;9657:3;9645:16;;;;;;;;;;:55;;;;9726:36;9707:11;9719:3;9707:16;;;;;;;;;;:55;;;;9788:36;9769:11;9781:3;9769:16;;;;;;;;;;:55;;;;524:10:6;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;529:26:1;535:10;549:5;;547:1;:7;529:5;;;:26;;;:::i;:::-;258:1900;;5814:263:7;5907:1;5888:21;;:7;:21;;;;5880:30;;;;;;;;5936:23;5953:5;5936:12;;:16;;;;;;:23;;;;;:::i;:::-;5921:12;:38;;;;5990:29;6013:5;5990:9;:18;6000:7;5990:18;;;;;;;;;;;;;;;;:22;;;;;;:29;;;;;:::i;:::-;5969:9;:18;5979:7;5969:18;;;;;;;;;;;;;;;:50;;;;6055:7;6034:36;;6051:1;6034:36;;;6064:5;6034:36;;;;;;;;;;;;;;;;;;5814:263;;:::o;1439:145:5:-;1497:7;1516:9;1532:1;1528;:5;1516:17;;1556:1;1551;:6;;1543:15;;;;;;;;1576:1;1569:8;;;1439:145;;;;:::o;258:1900:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "258:1900:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2721:145:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2721:145:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2721:145:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;452:36:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;452:36:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;916:89:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;916:89:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3329:224;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3329:224:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3329:224:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;908:222:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;908:222:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;908:222:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1145:882:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1145:882:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1145:882:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4067:200:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4067:200:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4067:200:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;571:173:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;571:173:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;752:148;;8:9:-1;5:2;;;30:1;27;20:12;5:2;752:148:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;752:148:1;;;;;;;;;;;;;;;;;:::i;:::-;;2709:1056:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2709:1056:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2709:1056:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;576:29:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;576:29:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;576:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1217:104:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1217:104:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1217:104:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1423:137:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1423:137:6;;;:::i;:::-;;659:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1138:218:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1138:218:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1138:218:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;405:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;405:40:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4786:210:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4786:210:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4786:210:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1948:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1948:137:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1948:137:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1652:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1652:129:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1652:129:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1731:107:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1731:107:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1731:107:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;369:29:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;369:29:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2721:145:7;2786:4;2802:36;2811:10;2823:7;2832:5;2802:8;:36::i;:::-;2855:4;2848:11;;2721:145;;;;:::o;452:36:1:-;;;;:::o;916:89:7:-;960:7;986:12;;979:19;;916:89;:::o;3329:224::-;3408:4;3424:26;3434:4;3440:2;3444:5;3424:9;:26::i;:::-;3460:65;3469:4;3475:10;3487:37;3518:5;3487:8;:14;3496:4;3487:14;;;;;;;;;;;;;;;:26;3502:10;3487:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3460:8;:65::i;:::-;3542:4;3535:11;;3329:224;;;;;:::o;908:222:1:-;994:18;1037:85;1061:13;:11;:13::i;:::-;1076:14;;1099:12;;1114:7;1037:23;:85::i;:::-;1030:92;;908:222;;;:::o;1145:882:0:-;1308:7;1368:1;1358:7;:11;:34;;;;;1391:1;1373:15;:19;1358:34;:55;;;;;1412:1;1396:13;:17;;;1358:55;:93;;;;;467:7;1417:34;;:13;:34;;;;1358:93;1350:102;;;;;;;;1524:1;1506:14;:19;1502:50;;;1543:1;1536:8;;;;1502:50;467:7;1604:34;;:13;:34;;;1600:112;;;1656:48;1688:15;1656:27;1668:14;1656:7;:11;;:27;;;;:::i;:::-;:31;;:48;;;;:::i;:::-;1649:55;;;;1600:112;1719:14;1740:15;1762:13;1778:35;1797:15;1778:14;:18;;:35;;;;:::i;:::-;1762:51;;1842:77;1856:5;1863:15;1880:13;467:7;1842:5;:77::i;:::-;1820:99;;;;;;;;1926:22;1974:9;1951:32;;:19;1963:6;1951:7;:11;;:19;;;;:::i;:::-;:32;52:12:-1;49:1;45:20;29:14;25:41;7:59;;1951:32:0;1926:57;;2014:7;1997:14;:24;1990:31;;;;;;1145:882;;;;;;;:::o;4067:200:7:-;4147:4;4163:76;4172:10;4184:7;4193:45;4227:10;4193:8;:20;4202:10;4193:20;;;;;;;;;;;;;;;:29;4214:7;4193:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;4163:8;:76::i;:::-;4256:4;4249:11;;4067:200;;;;:::o;571:173:1:-;657:1;649:5;:9;641:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;704:32;720:8;730:5;704:15;:32::i;:::-;;571:173;;:::o;752:148::-;801:20;824:24;840:7;824:15;:24::i;:::-;801:47;;859:10;:19;;:33;879:12;859:33;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;859:33:1;752:148;;:::o;2709:1056:0:-;2865:7;2925:1;2915:7;:11;:34;;;;;2948:1;2930:15;:19;2915:34;:55;;;;;2969:1;2953:13;:17;;;2915:55;:93;;;;;467:7;2974:34;;:13;:34;;;;2915:93;:119;;;;;3027:7;3012:11;:22;;2915:119;2907:128;;;;;;;;3101:1;3086:11;:16;3082:47;;;3120:1;3113:8;;;;3082:47;3206:7;3191:11;:22;3187:67;;;3231:15;3224:22;;;;3187:67;467:7;3306:34;;:13;:34;;;3302:109;;;3358:45;3395:7;3358:32;3378:11;3358:15;:19;;:32;;;;:::i;:::-;:36;;:45;;;;:::i;:::-;3351:52;;;;3302:109;3418:14;3439:15;3461:13;3487:11;3477:7;:21;3461:37;;3527:69;3541:7;3550:5;467:7;3576:13;3527:5;:69::i;:::-;3505:91;;;;;;;;3603:18;3624:27;3644:6;3624:15;:19;;:27;;;;:::i;:::-;3603:48;;3658:18;3698:9;3679:28;;:15;:28;;;;3658:49;;3721:38;3752:6;3721:26;3736:10;3721;:14;;:26;;;;:::i;:::-;:30;;:38;;;;:::i;:::-;3714:45;;;;;;;2709:1056;;;;;;;:::o;576:29:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1217:104:7:-;1272:7;1298:9;:16;1308:5;1298:16;;;;;;;;;;;;;;;;1291:23;;1217:104;;;:::o;1423:137:6:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1521:1;1484:40;;1505:6;;;;;;;;;;;1484:40;;;;;;;;;;;;1551:1;1534:6;;:19;;;;;;;;;;;;;;;;;;1423:137::o;659:77::-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1138:218:1:-;1224:18;1267:81;1287:13;:11;:13::i;:::-;1302:14;;1325:12;;1340:7;1267:19;:81::i;:::-;1260:88;;1138:218;;;:::o;405:40::-;;;;:::o;4786:210:7:-;4871:4;4887:81;4896:10;4908:7;4917:50;4951:15;4917:8;:20;4926:10;4917:20;;;;;;;;;;;;;;;:29;4938:7;4917:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;4887:8;:81::i;:::-;4985:4;4978:11;;4786:210;;;;:::o;1948:137::-;2009:4;2025:32;2035:10;2047:2;2051:5;2025:9;:32::i;:::-;2074:4;2067:11;;1948:137;;;;:::o;1652:129::-;1724:7;1750:8;:15;1759:5;1750:15;;;;;;;;;;;;;;;:24;1766:7;1750:24;;;;;;;;;;;;;;;;1743:31;;1652:129;;;;:::o;1731:107:6:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;369:29:1:-;;;;:::o;6831:248:7:-;6942:1;6923:21;;:7;:21;;;;6915:30;;;;;;;;6980:1;6963:19;;:5;:19;;;;6955:28;;;;;;;;7021:5;6994:8;:15;7003:5;6994:15;;;;;;;;;;;;;;;:24;7010:7;6994:24;;;;;;;;;;;;;;;:32;;;;7057:7;7041:31;;7050:5;7041:31;;;7066:5;7041:31;;;;;;;;;;;;;;;;;;6831:248;;;:::o;5215:256::-;5316:1;5302:16;;:2;:16;;;;5294:25;;;;;;;;5348:26;5368:5;5348:9;:15;5358:4;5348:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5330:9;:15;5340:4;5330:15;;;;;;;;;;;;;;;:44;;;;5400:24;5418:5;5400:9;:13;5410:2;5400:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5384:9;:13;5394:2;5384:13;;;;;;;;;;;;;;;:40;;;;5454:2;5439:25;;5448:4;5439:25;;;5458:5;5439:25;;;;;;;;;;;;;;;;;;5215:256;;;:::o;1211:145:5:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;231:421::-;289:7;534:1;529;:6;525:45;;;558:1;551:8;;;;525:45;580:9;596:1;592;:5;580:17;;624:1;619;615;:5;;;;;;;;:10;607:19;;;;;;;;644:1;637:8;;;231:421;;;;;:::o;782:296::-;840:7;937:1;933;:5;925:14;;;;;;;;949:9;965:1;961;:5;;;;;;;;949:17;;1070:1;1063:8;;;782:296;;;;:::o;1439:145::-;1497:7;1516:9;1532:1;1528;:5;1516:17;;1556:1;1551;:6;;1543:15;;;;;;;;1576:1;1569:8;;;1439:145;;;;:::o;11201:821:3:-;11324:7;11333:5;1166:35;11358:6;:16;11350:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11428:6;11418;:16;;11410:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11476:15;11498:12;11532:6;1016:35;11513:6;:16;:25;;;;;;;;11498:40;;1586:35;11549:4;:22;11545:120;;;11592:16;11603:4;11592:10;:16::i;:::-;11582:26;;11545:120;;;11641:16;11652:4;11641:10;:16::i;:::-;11631:26;;11545:120;11673:23;11717:5;11699:23;;11709:5;11699:15;;:7;:15;:23;;;;;;;;11673:49;;1672:35;11733:15;:33;11729:288;;;11785:27;11796:15;11785:10;:27::i;:::-;783:3;11777:51;;;;;;;;;11729:288;11851:15;11869:42;11895:15;11869:25;:42::i;:::-;11851:60;;11928:69;11975:9;783:3;11959:25;11939:46;;:15;:46;52:12:-1;49:1;45:20;29:14;25:41;7:59;;11939:46:3;11987:9;11928:10;:69::i;:::-;11999:9;11920:89;;;;;;;;11201:821;;;;;;;;:::o;1364:339:1:-;1446:7;1487:1;1479:5;:9;1471:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1531:14;1548:36;1578:5;1548:29;:36::i;:::-;1531:53;;1595:23;1601:8;1611:6;1595:5;:23::i;:::-;1646:25;1665:5;1646:14;;:18;;:25;;;;:::i;:::-;1629:14;:42;;;;1689:6;1682:13;;;1364:339;;;;:::o;1711:444::-;1780:7;1823:1;1813:7;:11;1805:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1897:7;1872:21;1882:10;1872:9;:21::i;:::-;:32;;1864:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1950:23;1976:38;2006:7;1976:29;:38::i;:::-;1950:64;;2042:35;2061:15;2042:14;;:18;;:35;;;;:::i;:::-;2025:14;:52;;;;2088:26;2094:10;2106:7;2088:5;:26::i;:::-;2132:15;2125:22;;;1711:444;;;:::o;1982:183:6:-;2075:1;2055:22;;:8;:22;;;;2047:31;;;;;;;;2122:8;2093:38;;2114:6;;;;;;;;;;;2093:38;;;;;;;;;;;;2150:8;2141:6;;:17;;;;;;;;;;;;;;;;;;1982:183;:::o;18859:2401:3:-;18913:7;18932:11;18946:1;18932:15;;18959:9;18978;18997;19027:34;19022:1;:39;;19018:143;;;19071:34;19064:41;;;;19125:34;1016:35;19111:1;:11;:48;;;;;;;;19107:52;;19018:143;19179:34;19174:1;:39;;19170:143;;;19223:34;19216:41;;;;19277:34;1016:35;19263:1;:11;:48;;;;;;;;19259:52;;19170:143;19331:34;19326:1;:39;;19322:143;;;19375:34;19368:41;;;;19429:34;1016:35;19415:1;:11;:48;;;;;;;;19411:52;;19322:143;19483:34;19478:1;:39;;19474:143;;;19527:34;19520:41;;;;19581:34;1016:35;19567:1;:11;:48;;;;;;;;19563:52;;19474:143;19635:34;19630:1;:39;;19626:143;;;19679:34;19672:41;;;;19733:34;1016:35;19719:1;:11;:48;;;;;;;;19715:52;;19626:143;19787:34;19782:1;:39;;19778:143;;;19831:34;19824:41;;;;19885:34;1016:35;19871:1;:11;:48;;;;;;;;19867:52;;19778:143;19939:34;19934:1;:39;;19930:143;;;19983:34;19976:41;;;;20037:34;1016:35;20023:1;:11;:48;;;;;;;;20019:52;;19930:143;20091:34;20086:1;:39;;20082:143;;;20135:34;20128:41;;;;20189:34;1016:35;20175:1;:11;:48;;;;;;;;20171:52;;20082:143;1016:35;20244:1;:11;20240:15;;;20236:19;;1016:35;20273:1;20269;:5;:15;;;;;;;;20265:19;;20349:35;20344:1;20306:35;:39;20301:1;:45;:83;;;;;;;;20294:90;;;;1016:35;20394:1;20390;:5;:15;;;;;;;;20386:19;;20470:35;20465:1;20427:35;:39;20422:1;:45;:83;;;;;;;;20415:90;;;;1016:35;20515:1;20511;:5;:15;;;;;;;;20507:19;;20591:35;20586:1;20548:35;:39;20543:1;:45;:83;;;;;;;;20536:90;;;;1016:35;20636:1;20632;:5;:15;;;;;;;;20628:19;;20712:35;20707:1;20669:35;:39;20664:1;:45;:83;;;;;;;;20657:90;;;;1016:35;20757:1;20753;:5;:15;;;;;;;;20749:19;;20833:35;20828:1;20790:35;:39;20785:1;:45;:83;;;;;;;;20778:90;;;;1016:35;20878:1;20874;:5;:15;;;;;;;;20870:19;;20954:35;20949:1;20911:35;:39;20906:1;:45;:83;;;;;;;;20899:90;;;;1016:35;20999:1;20995;:5;:15;;;;;;;;20991:19;;21075:35;21070:1;21032:35;:39;21027:1;:45;:83;;;;;;;;21020:90;;;;1016:35;21120:1;21116;:5;:15;;;;;;;;21112:19;;21196:35;21191:1;21153:35;:39;21148:1;:45;:83;;;;;;;;21141:90;;;;21250:3;21243:10;;;;;;18859:2401;;;:::o;12183:737::-;12238:7;12254:11;12268:1;12254:15;;12276:9;12288:2;12276:14;;1091:35;12391:1;:12;;12387:134;;;12414:11;12428:22;1016:35;12438:1;:11;;;;;;;;12428:9;:22::i;:::-;12414:36;;12465:5;12459:11;;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;12459:11:3;;;1016:35;12498:5;:15;;;12492:21;;12387:134;;1016:35;12621:1;:11;12617:245;;;12648:7;783:3;12648:23;;12643:212;12677:1;12673;:5;;;12643:212;;;1016:35;12705:1;12701;:5;12700:17;;;;;;;;12696:21;;1091:35;12749:1;:12;;12745:101;;;12782:1;12776:7;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;12776:7:3;;;12832:1;12828;:5;12820:14;;643:1;12820:14;;;;12813:21;;;;12745:101;12680:3;;;;;;12643:212;;;;12617:245;1399:33;1318;12877:3;:19;:37;;;;;;;;12870:44;;;;12183:737;;;:::o;21432:2984::-;21486:7;21505:11;21519:1;21505:15;;21532:9;21551;21584:34;21580:1;:38;;;;;;;;21576:42;;;21572:46;;1016:35;21636:1;21632;:5;:15;;;;;;;;21628:19;;21660:18;21656:1;:22;21649:29;;;;1016:35;21722:1;21718;:5;:15;;;;;;;;21714:19;;21746:18;21742:1;:22;21735:29;;;;1016:35;21808:1;21804;:5;:15;;;;;;;;21800:19;;21832:18;21828:1;:22;21821:29;;;;1016:35;21894:1;21890;:5;:15;;;;;;;;21886:19;;21918:18;21914:1;:22;21907:29;;;;1016:35;21980:1;21976;:5;:15;;;;;;;;21972:19;;22004:18;22000:1;:22;21993:29;;;;1016:35;22066:1;22062;:5;:15;;;;;;;;22058:19;;22090:18;22086:1;:22;22079:29;;;;1016:35;22152:1;22148;:5;:15;;;;;;;;22144:19;;22176:18;22172:1;:22;22165:29;;;;1016:35;22238:1;22234;:5;:15;;;;;;;;22230:19;;22262:18;22258:1;:22;22251:29;;;;1016:35;22324:1;22320;:5;:15;;;;;;;;22316:19;;22348:18;22344:1;:22;22337:29;;;;1016:35;22410:1;22406;:5;:15;;;;;;;;22402:19;;22434:18;22430:1;:22;22423:29;;;;1016:35;22496:1;22492;:5;:15;;;;;;;;22488:19;;22520:18;22516:1;:22;22509:29;;;;1016:35;22582:1;22578;:5;:15;;;;;;;;22574:19;;22606:18;22602:1;:22;22595:29;;;;1016:35;22668:1;22664;:5;:15;;;;;;;;22660:19;;22692:18;22688:1;:22;22681:29;;;;1016:35;22754:1;22750;:5;:15;;;;;;;;22746:19;;22778:18;22774:1;:22;22767:29;;;;1016:35;22840:1;22836;:5;:15;;;;;;;;22832:19;;22864:18;22860:1;:22;22853:29;;;;1016:35;22926:1;22922;:5;:15;;;;;;;;22918:19;;22950:18;22946:1;:22;22939:29;;;;1016:35;23012:1;23008;:5;:15;;;;;;;;23004:19;;23036:18;23032:1;:22;23025:29;;;;1016:35;23098:1;23094;:5;:15;;;;;;;;23090:19;;23122:18;23118:1;:22;23111:29;;;;1016:35;23184:1;23180;:5;:15;;;;;;;;23176:19;;23208:18;23204:1;:22;23197:29;;;;1016:35;23295:1;23274:18;23268:3;:24;;;;;;;;:28;:38;23262:44;;23417:1;23377:35;23373:1;:39;23372:46;;23368:137;;;23470:35;23432;23426:3;:41;:79;;;;;;;;23420:85;;23368:137;23564:1;23524:35;23520:1;:39;23519:46;;23515:137;;;23617:35;23579;23573:3;:41;:79;;;;;;;;23567:85;;23515:137;23711:1;23671:35;23667:1;:39;23666:46;;23662:137;;;23764:35;23726;23720:3;:41;:79;;;;;;;;23714:85;;23662:137;23858:1;23818:35;23814:1;:39;23813:46;;23809:137;;;23911:35;23873;23867:3;:41;:79;;;;;;;;23861:85;;23809:137;24005:1;23965:35;23961:1;:39;23960:46;;23956:137;;;24058:35;24020;24014:3;:41;:79;;;;;;;;24008:85;;23956:137;24152:1;24112:35;24108:1;:39;24107:46;;24103:137;;;24205:35;24167;24161:3;:41;:79;;;;;;;;24155:85;;24103:137;24299:1;24259:35;24255:1;:39;24254:46;;24250:137;;;24352:35;24314;24308:3;:41;:79;;;;;;;;24302:85;;24250:137;24406:3;24399:10;;;;;21432:2984;;;:::o;13827:445::-;13900:5;13917:8;737:2;13917:24;;13948:8;783:3;13948:24;;13981:147;13997:2;13988:11;;13993:1;13988:2;:6;:11;;;13981:147;;;14010:9;14034:1;14028:2;14023;:7;14022:13;;;;;;;;;;14010:25;;14068:2;14048:11;14060:3;14048:16;;;;;;;;;;;;;:22;;14044:76;;;14086:3;14081:8;;14044:76;;;14117:3;14112:8;;14044:76;13981:147;;;;14159:2;14140:11;14152:2;14140:15;;;;;;;;;;;;;:21;;14136:43;;;14177:2;14170:9;;;;;;14136:43;14209:2;14190:11;14202:2;14190:15;;;;;;;;;;;;;:21;;14186:43;;;14227:2;14220:9;;;;;;14186:43;14245:5;14238:13;;;;;;14265:1;14258:8;;;;13827:445;;;;:::o;14854:3828::-;14927:7;14946:10;14959:2;14946:15;;14971:11;14985:1;14971:15;;15016:10;15003:23;;15009:2;15004;:7;15003:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;15003:23:3;14998:28;;15040:33;15035:2;:38;15028:45;;;;15127:10;15114:23;;15120:2;15115;:7;15114:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;15114:23:3;15109:28;;15151:33;15146:2;:38;15139:45;;;;15238:10;15225:23;;15231:2;15226;:7;15225:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;15225:23:3;15220:28;;15262:33;15257:2;:38;15250:45;;;;15349:10;15336:23;;15342:2;15337;:7;15336:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;15336:23:3;15331:28;;15373:33;15368:2;:38;15361:45;;;;15460:10;15447:23;;15453:2;15448;:7;15447:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;15447:23:3;15442:28;;15484:33;15479:2;:38;15472:45;;;;15571:10;15558:23;;15564:2;15559;:7;15558:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;15558:23:3;15553:28;;15595:33;15590:2;:38;15583:45;;;;15682:10;15669:23;;15675:2;15670;:7;15669:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;15669:23:3;15664:28;;15706:33;15701:2;:38;15694:45;;;;15793:10;15780:23;;15786:2;15781;:7;15780:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;15780:23:3;15775:28;;15817:33;15812:2;:38;15805:45;;;;15904:10;15891:23;;15897:2;15892;:7;15891:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;15891:23:3;15886:28;;15928:33;15923:2;:38;15916:45;;;;16015:10;16002:23;;16008:2;16003;:7;16002:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16002:23:3;15997:28;;16039:33;16034:2;:38;16027:45;;;;16126:10;16113:23;;16119:2;16114;:7;16113:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16113:23:3;16108:28;;16150:33;16145:2;:38;16138:45;;;;16237:10;16224:23;;16230:2;16225;:7;16224:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16224:23:3;16219:28;;16261:33;16256:2;:38;16249:45;;;;16348:10;16335:23;;16341:2;16336;:7;16335:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16335:23:3;16330:28;;16372:33;16367:2;:38;16360:45;;;;16459:10;16446:23;;16452:2;16447;:7;16446:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16446:23:3;16441:28;;16483:33;16478:2;:38;16471:45;;;;16570:10;16557:23;;16563:2;16558;:7;16557:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16557:23:3;16552:28;;16594:33;16589:2;:38;16582:45;;;;16681:10;16668:23;;16674:2;16669;:7;16668:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16668:23:3;16663:28;;16705:33;16700:2;:38;16693:45;;;;16792:10;16779:23;;16785:2;16780;:7;16779:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16779:23:3;16774:28;;16816:33;16811:2;:38;16804:45;;;;16903:10;16890:23;;16896:2;16891;:7;16890:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16890:23:3;16885:28;;16927:33;16922:2;:38;16915:45;;;;17014:10;17001:23;;17007:2;17002;:7;17001:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17001:23:3;16996:28;;17038:33;17033:2;:38;17026:45;;;;17125:10;17112:23;;17118:2;17113;:7;17112:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17112:23:3;17107:28;;17149:33;17144:2;:38;17137:45;;;;17236:10;17223:23;;17229:2;17224;:7;17223:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17223:23:3;17218:28;;17260:33;17255:2;:38;17248:45;;;;17347:10;17334:23;;17340:2;17335;:7;17334:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17334:23:3;17329:28;;17371:33;17366:2;:38;17359:45;;;;17458:10;17445:23;;17451:2;17446;:7;17445:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17445:23:3;17440:28;;17482:33;17477:2;:38;17470:45;;;;17569:10;17556:23;;17562:2;17557;:7;17556:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17556:23:3;17551:28;;17593:33;17588:2;:38;17581:45;;;;17680:10;17667:23;;17673:2;17668;:7;17667:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17667:23:3;17662:28;;17704:33;17699:2;:38;17692:45;;;;17791:10;17778:23;;17784:2;17779;:7;17778:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17778:23:3;17773:28;;17815:33;17810:2;:38;17803:45;;;;17902:10;17889:23;;17895:2;17890;:7;17889:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17889:23:3;17884:28;;17926:33;17921:2;:38;17914:45;;;;18013:10;18000:23;;18006:2;18001;:7;18000:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;18000:23:3;17995:28;;18037:33;18032:2;:38;18025:45;;;;18124:10;18111:23;;18117:2;18112;:7;18111:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;18111:23:3;18106:28;;18148:33;18143:2;:38;18136:45;;;;18235:10;18222:23;;18228:2;18223;:7;18222:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;18222:23:3;18217:28;;18259:33;18254:2;:38;18247:45;;;;18346:10;18333:23;;18339:2;18334;:7;18333:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;18333:23:3;18328:28;;18370:33;18365:2;:38;18358:45;;;;18457:10;18444:23;;18450:2;18445;:7;18444:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;18444:23:3;18439:28;;18481:33;18476:2;:38;18469:45;;;;18614:10;18607:17;;643:1;18607:17;;;;18601:2;18565:33;18559:3;:39;;;;;;;;:44;:66;18552:73;;;;14854:3828;;;;:::o;5814:263:7:-;5907:1;5888:21;;:7;:21;;;;5880:30;;;;;;;;5936:23;5953:5;5936:12;;:16;;:23;;;;:::i;:::-;5921:12;:38;;;;5990:29;6013:5;5990:9;:18;6000:7;5990:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;5969:9;:18;5979:7;5969:18;;;;;;;;;;;;;;;:50;;;;6055:7;6034:36;;6051:1;6034:36;;;6064:5;6034:36;;;;;;;;;;;;;;;;;;5814:263;;:::o;6303:::-;6396:1;6377:21;;:7;:21;;;;6369:30;;;;;;;;6425:23;6442:5;6425:12;;:16;;:23;;;;:::i;:::-;6410:12;:38;;;;6479:29;6502:5;6479:9;:18;6489:7;6479:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6458:9;:18;6468:7;6458:18;;;;;;;;;;;;;;;:50;;;;6549:1;6523:36;;6532:7;6523:36;;;6553:5;6523:36;;;;;;;;;;;;;;;;;;6303:263;;:::o;13032:439:3:-;13086:5;13100:9;13112:1;13100:13;;13120:9;13132:2;13120:14;;13151:3;13147:1;:7;13143:304;;;13196:61;13207:1;13203;:5;13196:61;;;13227:1;13221:7;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;13221:7:3;;;13246:1;13239:8;;;;13196:61;;;13143:304;;;13315:7;13325:3;13315:13;;13310:130;13334:1;13330;:5;;;13310:130;;;13374:1;13367:8;;643:1;13367:8;;;;13361:1;:15;;13357:74;;;13397:1;13391:7;;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;13391:7:3;;;13418:1;13411:8;;;;13357:74;13343:1;13337:7;;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;13337:7:3;;;13310:130;;;;13143:304;13462:3;13455:10;;;;13032:439;;;:::o",
  "source": "pragma solidity ^0.5.2;\r\n\r\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\r\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\r\n\r\nimport \"./BancorBondingCurve.sol\";\r\n\r\ncontract ContinuousToken is BancorBondingCurve, Ownable, ERC20 {\r\n    \r\n    using SafeMath for uint256;\r\n\r\n    uint256 public scale = 10**18;\r\n    uint256 public reserveBalance = 10*scale;\r\n    uint256 public reserveRatio = 500000;\r\n\r\n    constructor() public {\r\n        _mint(msg.sender, 1*scale);\r\n    }\r\n\r\n    function mint(address reciever, uint value) public payable {\r\n        require(value > 0, \"Must send ether to buy tokens.\");\r\n        _continuousMint(reciever, value);\r\n    }\r\n\r\n    function burn(uint256 _amount) public {\r\n        uint256 returnAmount = _continuousBurn(_amount);\r\n        msg.sender.transfer(returnAmount);\r\n    }\r\n\r\n    function calculateContinuousMintReturn(uint256 _amount)\r\n        public view returns (uint256 mintAmount)\r\n    {\r\n        return calculatePurchaseReturn(totalSupply(), reserveBalance, uint32(reserveRatio), _amount);\r\n    }\r\n\r\n    function calculateContinuousBurnReturn(uint256 _amount)\r\n        public view returns (uint256 burnAmount)\r\n    {\r\n        return calculateSaleReturn(totalSupply(), reserveBalance, uint32(reserveRatio), _amount);\r\n    }\r\n\r\n    function _continuousMint(address reciever, uint value)\r\n        internal returns (uint256)\r\n    {\r\n        require(value > 0, \"Deposit must be non-zero.\");\r\n\r\n        uint256 amount = calculateContinuousMintReturn(value);\r\n        _mint(reciever, amount);\r\n        reserveBalance = reserveBalance.add(value);\r\n        return amount;\r\n    }\r\n\r\n    function _continuousBurn(uint256 _amount)\r\n        internal returns (uint256)\r\n    {\r\n        require(_amount > 0, \"Amount must be non-zero.\");\r\n        require(balanceOf(msg.sender) >= _amount, \"Insufficient tokens to burn.\");\r\n\r\n        uint256 reimburseAmount = calculateContinuousBurnReturn(_amount);\r\n        reserveBalance = reserveBalance.sub(reimburseAmount);\r\n        _burn(msg.sender, _amount);\r\n        return reimburseAmount;\r\n    }\r\n}",
  "sourcePath": "D:\\dapps\\space-miners\\contracts\\ContinuousToken.sol",
  "ast": {
    "absolutePath": "/D/dapps/space-miners/contracts/ContinuousToken.sol",
    "exportedSymbols": {
      "ContinuousToken": [
        408
      ]
    },
    "id": 409,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 210,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 211,
        "nodeType": "ImportDirective",
        "scope": 409,
        "sourceUnit": 3069,
        "src": "27:59:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 212,
        "nodeType": "ImportDirective",
        "scope": 409,
        "sourceUnit": 3561,
        "src": "88:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 213,
        "nodeType": "ImportDirective",
        "scope": 409,
        "sourceUnit": 3178,
        "src": "153:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dapps/space-miners/contracts/BancorBondingCurve.sol",
        "file": "./BancorBondingCurve.sol",
        "id": 214,
        "nodeType": "ImportDirective",
        "scope": 409,
        "sourceUnit": 209,
        "src": "220:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 215,
              "name": "BancorBondingCurve",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 208,
              "src": "286:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BancorBondingCurve_$208",
                "typeString": "contract BancorBondingCurve"
              }
            },
            "id": 216,
            "nodeType": "InheritanceSpecifier",
            "src": "286:18:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 217,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3177,
              "src": "306:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3177",
                "typeString": "contract Ownable"
              }
            },
            "id": 218,
            "nodeType": "InheritanceSpecifier",
            "src": "306:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 219,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3560,
              "src": "315:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3560",
                "typeString": "contract ERC20"
              }
            },
            "id": 220,
            "nodeType": "InheritanceSpecifier",
            "src": "315:5:1"
          }
        ],
        "contractDependencies": [
          3177,
          3560,
          3629,
          208,
          2645
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 408,
        "linearizedBaseContracts": [
          408,
          3560,
          3629,
          3177,
          208,
          2645
        ],
        "name": "ContinuousToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 223,
            "libraryName": {
              "contractScope": null,
              "id": 221,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3068,
              "src": "340:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3068",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "334:27:1",
            "typeName": {
              "id": 222,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "353:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 228,
            "name": "scale",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "369:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 224,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "369:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 227,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 225,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "392:2:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3138",
                "id": 226,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "396:2:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
              "src": "392:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 233,
            "name": "reserveBalance",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "405:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 229,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "405:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 232,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 230,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "437:2:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "id": 231,
                "name": "scale",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 228,
                "src": "440:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "437:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 236,
            "name": "reserveRatio",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "452:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 234,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "452:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "353030303030",
              "id": 235,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "482:6:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500000_by_1",
                "typeString": "int_const 500000"
              },
              "value": "500000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 247,
              "nodeType": "Block",
              "src": "518:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 240,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3644,
                          "src": "535:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "535:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "547:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 243,
                          "name": "scale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "549:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "547:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 239,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3449,
                      "src": "529:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "529:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "529:26:1"
                }
              ]
            },
            "documentation": null,
            "id": 248,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:2:1"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "518:0:1"
            },
            "scope": 408,
            "src": "497:66:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "630:114:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 256,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "649:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "657:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "649:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d7573742073656e6420657468657220746f2062757920746f6b656e732e",
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "660:32:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c150592cee57a0d48b686eaaf5c81c8770af75ae7063f4207c55e02be8b0093d",
                          "typeString": "literal_string \"Must send ether to buy tokens.\""
                        },
                        "value": "Must send ether to buy tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c150592cee57a0d48b686eaaf5c81c8770af75ae7063f4207c55e02be8b0093d",
                          "typeString": "literal_string \"Must send ether to buy tokens.\""
                        }
                      ],
                      "id": 255,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3647,
                        3648
                      ],
                      "referencedDeclaration": 3648,
                      "src": "641:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "641:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "641:52:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 263,
                        "name": "reciever",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 250,
                        "src": "720:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "730:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 262,
                      "name": "_continuousMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "704:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "704:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "704:32:1"
                }
              ]
            },
            "documentation": null,
            "id": 268,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "name": "reciever",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "585:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 252,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "603:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "584:30:1"
            },
            "returnParameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "630:0:1"
            },
            "scope": 408,
            "src": "571:173:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "790:110:1",
              "statements": [
                {
                  "assignments": [
                    274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 274,
                      "name": "returnAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 287,
                      "src": "801:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 273,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "801:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 278,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 276,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "840:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 275,
                      "name": "_continuousBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "824:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "801:47:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 284,
                        "name": "returnAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "879:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 279,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3644,
                          "src": "859:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "859:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "859:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "859:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "859:33:1"
                }
              ]
            },
            "documentation": null,
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "766:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "765:17:1"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "790:0:1"
            },
            "scope": 408,
            "src": "752:148:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "1019:111:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 296,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3206,
                          "src": "1061:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1061:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 298,
                        "name": "reserveBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "1076:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 300,
                            "name": "reserveRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "1099:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1092:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": "uint32"
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1092:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 302,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "1114:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 295,
                      "name": "calculatePurchaseReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "1037:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint32,uint256) view returns (uint256)"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1037:85:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 294,
                  "id": 304,
                  "nodeType": "Return",
                  "src": "1030:92:1"
                }
              ]
            },
            "documentation": null,
            "id": 306,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateContinuousMintReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "947:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "946:17:1"
            },
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "name": "mintAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "994:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "993:20:1"
            },
            "scope": 408,
            "src": "908:222:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "1249:107:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 314,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3206,
                          "src": "1287:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1287:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 316,
                        "name": "reserveBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "1302:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 318,
                            "name": "reserveRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "1325:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1318:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": "uint32"
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1318:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 320,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 308,
                        "src": "1340:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 313,
                      "name": "calculateSaleReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "1267:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint32,uint256) view returns (uint256)"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1267:81:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 312,
                  "id": 322,
                  "nodeType": "Return",
                  "src": "1260:88:1"
                }
              ]
            },
            "documentation": null,
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateContinuousBurnReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 308,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "1177:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1176:17:1"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "name": "burnAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "1224:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1224:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1223:20:1"
            },
            "scope": 408,
            "src": "1138:218:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 360,
              "nodeType": "Block",
              "src": "1460:243:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 334,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 328,
                          "src": "1479:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1487:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1479:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4465706f736974206d757374206265206e6f6e2d7a65726f2e",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1490:27:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_384f005d376e8e27694df499dbb9c5a37c55a854f203d91db02ba3830d7e9867",
                          "typeString": "literal_string \"Deposit must be non-zero.\""
                        },
                        "value": "Deposit must be non-zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_384f005d376e8e27694df499dbb9c5a37c55a854f203d91db02ba3830d7e9867",
                          "typeString": "literal_string \"Deposit must be non-zero.\""
                        }
                      ],
                      "id": 333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3647,
                        3648
                      ],
                      "referencedDeclaration": 3648,
                      "src": "1471:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1471:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "1471:47:1"
                },
                {
                  "assignments": [
                    341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 360,
                      "src": "1531:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1531:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 343,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "1578:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 342,
                      "name": "calculateContinuousMintReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "1548:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1531:53:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 347,
                        "name": "reciever",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "1601:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 348,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "1611:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 346,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3449,
                      "src": "1595:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1595:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "1595:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 351,
                      "name": "reserveBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "1629:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 354,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 328,
                          "src": "1665:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 352,
                          "name": "reserveBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "1646:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3047,
                        "src": "1646:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1646:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1629:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 358,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 341,
                    "src": "1689:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 332,
                  "id": 359,
                  "nodeType": "Return",
                  "src": "1682:13:1"
                }
              ]
            },
            "documentation": null,
            "id": 361,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_continuousMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 326,
                  "name": "reciever",
                  "nodeType": "VariableDeclaration",
                  "scope": 361,
                  "src": "1389:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 328,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 361,
                  "src": "1407:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1388:30:1"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 361,
                  "src": "1446:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1446:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1445:9:1"
            },
            "scope": 408,
            "src": "1364:339:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "1794:361:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 369,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "1813:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1823:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1813:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416d6f756e74206d757374206265206e6f6e2d7a65726f2e",
                        "id": 372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1826:26:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dfeabd9f98723cad1570bd87fad256d1cbf96804bfa4a2d119d2c9449a257e66",
                          "typeString": "literal_string \"Amount must be non-zero.\""
                        },
                        "value": "Amount must be non-zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dfeabd9f98723cad1570bd87fad256d1cbf96804bfa4a2d119d2c9449a257e66",
                          "typeString": "literal_string \"Amount must be non-zero.\""
                        }
                      ],
                      "id": 368,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3647,
                        3648
                      ],
                      "referencedDeclaration": 3648,
                      "src": "1805:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1805:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "1805:48:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 377,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3644,
                                "src": "1882:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1882:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 376,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3218,
                            "src": "1872:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1872:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 380,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "1897:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1872:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e73756666696369656e7420746f6b656e7320746f206275726e2e",
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1906:30:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f8e3a3e4ac165136f48c2ad0b909c53ab197371836b489f789dec19bb20b32f",
                          "typeString": "literal_string \"Insufficient tokens to burn.\""
                        },
                        "value": "Insufficient tokens to burn."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9f8e3a3e4ac165136f48c2ad0b909c53ab197371836b489f789dec19bb20b32f",
                          "typeString": "literal_string \"Insufficient tokens to burn.\""
                        }
                      ],
                      "id": 375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3647,
                        3648
                      ],
                      "referencedDeclaration": 3648,
                      "src": "1864:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1864:73:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "1864:73:1"
                },
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "name": "reimburseAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 406,
                      "src": "1950:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1950:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 390,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 388,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 363,
                        "src": "2006:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 387,
                      "name": "calculateContinuousBurnReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "1976:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1976:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1950:64:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 391,
                      "name": "reserveBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "2025:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 394,
                          "name": "reimburseAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "2061:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 392,
                          "name": "reserveBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "2042:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3023,
                        "src": "2042:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2042:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2025:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:52:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 399,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3644,
                          "src": "2094:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2094:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 401,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 363,
                        "src": "2106:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 398,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3491,
                      "src": "2088:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2088:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "2088:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 404,
                    "name": "reimburseAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 386,
                    "src": "2132:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 367,
                  "id": 405,
                  "nodeType": "Return",
                  "src": "2125:22:1"
                }
              ]
            },
            "documentation": null,
            "id": 407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_continuousBurn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 363,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "1736:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1735:17:1"
            },
            "returnParameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 366,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "1780:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1780:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1779:9:1"
            },
            "scope": 408,
            "src": "1711:444:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 409,
        "src": "258:1900:1"
      }
    ],
    "src": "0:2158:1"
  },
  "legacyAST": {
    "absolutePath": "/D/dapps/space-miners/contracts/ContinuousToken.sol",
    "exportedSymbols": {
      "ContinuousToken": [
        408
      ]
    },
    "id": 409,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 210,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 211,
        "nodeType": "ImportDirective",
        "scope": 409,
        "sourceUnit": 3069,
        "src": "27:59:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 212,
        "nodeType": "ImportDirective",
        "scope": 409,
        "sourceUnit": 3561,
        "src": "88:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 213,
        "nodeType": "ImportDirective",
        "scope": 409,
        "sourceUnit": 3178,
        "src": "153:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/dapps/space-miners/contracts/BancorBondingCurve.sol",
        "file": "./BancorBondingCurve.sol",
        "id": 214,
        "nodeType": "ImportDirective",
        "scope": 409,
        "sourceUnit": 209,
        "src": "220:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 215,
              "name": "BancorBondingCurve",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 208,
              "src": "286:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BancorBondingCurve_$208",
                "typeString": "contract BancorBondingCurve"
              }
            },
            "id": 216,
            "nodeType": "InheritanceSpecifier",
            "src": "286:18:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 217,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3177,
              "src": "306:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3177",
                "typeString": "contract Ownable"
              }
            },
            "id": 218,
            "nodeType": "InheritanceSpecifier",
            "src": "306:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 219,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3560,
              "src": "315:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3560",
                "typeString": "contract ERC20"
              }
            },
            "id": 220,
            "nodeType": "InheritanceSpecifier",
            "src": "315:5:1"
          }
        ],
        "contractDependencies": [
          3177,
          3560,
          3629,
          208,
          2645
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 408,
        "linearizedBaseContracts": [
          408,
          3560,
          3629,
          3177,
          208,
          2645
        ],
        "name": "ContinuousToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 223,
            "libraryName": {
              "contractScope": null,
              "id": 221,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3068,
              "src": "340:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3068",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "334:27:1",
            "typeName": {
              "id": 222,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "353:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 228,
            "name": "scale",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "369:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 224,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "369:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 227,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 225,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "392:2:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3138",
                "id": 226,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "396:2:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
              "src": "392:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 233,
            "name": "reserveBalance",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "405:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 229,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "405:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 232,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 230,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "437:2:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "id": 231,
                "name": "scale",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 228,
                "src": "440:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "437:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 236,
            "name": "reserveRatio",
            "nodeType": "VariableDeclaration",
            "scope": 408,
            "src": "452:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 234,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "452:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "353030303030",
              "id": 235,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "482:6:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500000_by_1",
                "typeString": "int_const 500000"
              },
              "value": "500000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 247,
              "nodeType": "Block",
              "src": "518:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 240,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3644,
                          "src": "535:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "535:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "547:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 243,
                          "name": "scale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "549:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "547:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 239,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3449,
                      "src": "529:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "529:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "529:26:1"
                }
              ]
            },
            "documentation": null,
            "id": 248,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:2:1"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "518:0:1"
            },
            "scope": 408,
            "src": "497:66:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "630:114:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 256,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "649:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "657:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "649:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d7573742073656e6420657468657220746f2062757920746f6b656e732e",
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "660:32:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c150592cee57a0d48b686eaaf5c81c8770af75ae7063f4207c55e02be8b0093d",
                          "typeString": "literal_string \"Must send ether to buy tokens.\""
                        },
                        "value": "Must send ether to buy tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c150592cee57a0d48b686eaaf5c81c8770af75ae7063f4207c55e02be8b0093d",
                          "typeString": "literal_string \"Must send ether to buy tokens.\""
                        }
                      ],
                      "id": 255,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3647,
                        3648
                      ],
                      "referencedDeclaration": 3648,
                      "src": "641:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "641:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "641:52:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 263,
                        "name": "reciever",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 250,
                        "src": "720:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "730:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 262,
                      "name": "_continuousMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "704:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "704:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "704:32:1"
                }
              ]
            },
            "documentation": null,
            "id": 268,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "name": "reciever",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "585:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 252,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "603:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "584:30:1"
            },
            "returnParameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "630:0:1"
            },
            "scope": 408,
            "src": "571:173:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "790:110:1",
              "statements": [
                {
                  "assignments": [
                    274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 274,
                      "name": "returnAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 287,
                      "src": "801:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 273,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "801:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 278,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 276,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "840:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 275,
                      "name": "_continuousBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "824:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "801:47:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 284,
                        "name": "returnAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "879:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 279,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3644,
                          "src": "859:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "859:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "859:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "859:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "859:33:1"
                }
              ]
            },
            "documentation": null,
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "766:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "765:17:1"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "790:0:1"
            },
            "scope": 408,
            "src": "752:148:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "1019:111:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 296,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3206,
                          "src": "1061:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1061:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 298,
                        "name": "reserveBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "1076:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 300,
                            "name": "reserveRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "1099:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1092:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": "uint32"
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1092:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 302,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "1114:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 295,
                      "name": "calculatePurchaseReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "1037:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint32,uint256) view returns (uint256)"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1037:85:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 294,
                  "id": 304,
                  "nodeType": "Return",
                  "src": "1030:92:1"
                }
              ]
            },
            "documentation": null,
            "id": 306,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateContinuousMintReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "947:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "946:17:1"
            },
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "name": "mintAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "994:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "993:20:1"
            },
            "scope": 408,
            "src": "908:222:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "1249:107:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 314,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3206,
                          "src": "1287:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1287:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 316,
                        "name": "reserveBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "1302:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 318,
                            "name": "reserveRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "1325:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1318:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": "uint32"
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1318:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 320,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 308,
                        "src": "1340:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 313,
                      "name": "calculateSaleReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "1267:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint32,uint256) view returns (uint256)"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1267:81:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 312,
                  "id": 322,
                  "nodeType": "Return",
                  "src": "1260:88:1"
                }
              ]
            },
            "documentation": null,
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateContinuousBurnReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 308,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "1177:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1176:17:1"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "name": "burnAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "1224:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1224:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1223:20:1"
            },
            "scope": 408,
            "src": "1138:218:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 360,
              "nodeType": "Block",
              "src": "1460:243:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 334,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 328,
                          "src": "1479:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1487:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1479:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4465706f736974206d757374206265206e6f6e2d7a65726f2e",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1490:27:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_384f005d376e8e27694df499dbb9c5a37c55a854f203d91db02ba3830d7e9867",
                          "typeString": "literal_string \"Deposit must be non-zero.\""
                        },
                        "value": "Deposit must be non-zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_384f005d376e8e27694df499dbb9c5a37c55a854f203d91db02ba3830d7e9867",
                          "typeString": "literal_string \"Deposit must be non-zero.\""
                        }
                      ],
                      "id": 333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3647,
                        3648
                      ],
                      "referencedDeclaration": 3648,
                      "src": "1471:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1471:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "1471:47:1"
                },
                {
                  "assignments": [
                    341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 360,
                      "src": "1531:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1531:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 343,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "1578:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 342,
                      "name": "calculateContinuousMintReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "1548:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1531:53:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 347,
                        "name": "reciever",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "1601:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 348,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "1611:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 346,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3449,
                      "src": "1595:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1595:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "1595:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 351,
                      "name": "reserveBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "1629:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 354,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 328,
                          "src": "1665:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 352,
                          "name": "reserveBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "1646:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3047,
                        "src": "1646:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1646:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1629:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 358,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 341,
                    "src": "1689:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 332,
                  "id": 359,
                  "nodeType": "Return",
                  "src": "1682:13:1"
                }
              ]
            },
            "documentation": null,
            "id": 361,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_continuousMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 326,
                  "name": "reciever",
                  "nodeType": "VariableDeclaration",
                  "scope": 361,
                  "src": "1389:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 328,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 361,
                  "src": "1407:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1388:30:1"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 361,
                  "src": "1446:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1446:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1445:9:1"
            },
            "scope": 408,
            "src": "1364:339:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "1794:361:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 369,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "1813:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1823:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1813:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416d6f756e74206d757374206265206e6f6e2d7a65726f2e",
                        "id": 372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1826:26:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dfeabd9f98723cad1570bd87fad256d1cbf96804bfa4a2d119d2c9449a257e66",
                          "typeString": "literal_string \"Amount must be non-zero.\""
                        },
                        "value": "Amount must be non-zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dfeabd9f98723cad1570bd87fad256d1cbf96804bfa4a2d119d2c9449a257e66",
                          "typeString": "literal_string \"Amount must be non-zero.\""
                        }
                      ],
                      "id": 368,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3647,
                        3648
                      ],
                      "referencedDeclaration": 3648,
                      "src": "1805:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1805:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "1805:48:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 377,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3644,
                                "src": "1882:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1882:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 376,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3218,
                            "src": "1872:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1872:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 380,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "1897:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1872:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e73756666696369656e7420746f6b656e7320746f206275726e2e",
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1906:30:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f8e3a3e4ac165136f48c2ad0b909c53ab197371836b489f789dec19bb20b32f",
                          "typeString": "literal_string \"Insufficient tokens to burn.\""
                        },
                        "value": "Insufficient tokens to burn."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9f8e3a3e4ac165136f48c2ad0b909c53ab197371836b489f789dec19bb20b32f",
                          "typeString": "literal_string \"Insufficient tokens to burn.\""
                        }
                      ],
                      "id": 375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3647,
                        3648
                      ],
                      "referencedDeclaration": 3648,
                      "src": "1864:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1864:73:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "1864:73:1"
                },
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "name": "reimburseAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 406,
                      "src": "1950:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1950:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 390,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 388,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 363,
                        "src": "2006:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 387,
                      "name": "calculateContinuousBurnReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "1976:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1976:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1950:64:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 391,
                      "name": "reserveBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "2025:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 394,
                          "name": "reimburseAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "2061:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 392,
                          "name": "reserveBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "2042:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3023,
                        "src": "2042:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2042:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2025:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:52:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 399,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3644,
                          "src": "2094:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2094:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 401,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 363,
                        "src": "2106:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 398,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3491,
                      "src": "2088:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2088:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "2088:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 404,
                    "name": "reimburseAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 386,
                    "src": "2132:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 367,
                  "id": 405,
                  "nodeType": "Return",
                  "src": "2125:22:1"
                }
              ]
            },
            "documentation": null,
            "id": 407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_continuousBurn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 363,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "1736:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1735:17:1"
            },
            "returnParameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 366,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "1780:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1780:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1779:9:1"
            },
            "scope": 408,
            "src": "1711:444:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 409,
        "src": "258:1900:1"
      }
    ],
    "src": "0:2158:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-05-22T04:41:39.762Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "A uint256 representing the amount owned by the passed address."
      },
      "calculatePurchaseReturn(uint256,uint256,uint32,uint256)": {
        "details": "given a continuous token supply, reserve token balance, reserve ratio, and a deposit amount (in the reserve token),\r calculates the return for a given conversion (in the continuous token)\r    * Formula:\r Return = _supply * ((1 + _depositAmount / _reserveBalance) ^ (_reserveRatio / MAX_RESERVE_RATIO) - 1)\r ",
        "params": {
          "_depositAmount": "deposit amount, in reserve token\r ",
          "_reserveBalance": "total reserve token balance\r",
          "_reserveRatio": "reserve ratio, represented in ppm, 1-1000000\r",
          "_supply": "continuous token total supply\r"
        },
        "return": "purchase return amount\r"
      },
      "calculateSaleReturn(uint256,uint256,uint32,uint256)": {
        "details": "given a continuous token supply, reserve token balance, reserve ratio and a sell amount (in the continuous token),\r calculates the return for a given conversion (in the reserve token)\r    * Formula:\r Return = _reserveBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_reserveRatio / MAX_RESERVE_RATIO)))\r ",
        "params": {
          "_reserveBalance": "total reserve token balance\r",
          "_reserveRatio": "constant reserve ratio, represented in ppm, 1-1000000\r",
          "_sellAmount": "sell amount, in the continuous token itself\r ",
          "_supply": "continuous token total supply\r"
        },
        "return": "sale return amount\r"
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token to a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}